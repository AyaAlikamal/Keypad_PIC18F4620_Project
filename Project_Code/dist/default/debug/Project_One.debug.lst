

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed Nov 01 19:38:18 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    23                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    25   000000                     
    26                           ; Generated 23/03/2023 GMT
    27                           ; 
    28                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution. Publication is not required when
    42                           ;        this file is used in an embedded application.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC18F4620 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60   000000                     
    61                           	psect	idataCOMRAM
    62   00F885                     __pidataCOMRAM:
    63                           	callstack 0
    64                           
    65                           ;initializer for _keypad_btn_values
    66   00F885  37                 	db	55
    67   00F886  00                 	db	0
    68   00F887  00                 	db	0
    69   00F888  38                 	db	56
    70   00F889  00                 	db	0
    71   00F88A  00                 	db	0
    72   00F88B  39                 	db	57
    73   00F88C  00                 	db	0
    74   00F88D  00                 	db	0
    75   00F88E  2F                 	db	47
    76   00F88F  00                 	db	0
    77   00F890  00                 	db	0
    78   00F891  34                 	db	52
    79   00F892  00                 	db	0
    80   00F893  00                 	db	0
    81   00F894  35                 	db	53
    82   00F895  00                 	db	0
    83   00F896  00                 	db	0
    84   00F897  36                 	db	54
    85   00F898  00                 	db	0
    86   00F899  00                 	db	0
    87   00F89A  2A                 	db	42
    88   00F89B  00                 	db	0
    89   00F89C  00                 	db	0
    90   00F89D  31                 	db	49
    91   00F89E  00                 	db	0
    92   00F89F  00                 	db	0
    93   00F8A0  32                 	db	50
    94   00F8A1  00                 	db	0
    95   00F8A2  00                 	db	0
    96   00F8A3  33                 	db	51
    97   00F8A4  00                 	db	0
    98   00F8A5  00                 	db	0
    99   00F8A6  2D                 	db	45
   100   00F8A7  00                 	db	0
   101   00F8A8  00                 	db	0
   102   00F8A9  23                 	db	35
   103   00F8AA  00                 	db	0
   104   00F8AB  00                 	db	0
   105   00F8AC  30                 	db	48
   106   00F8AD  00                 	db	0
   107   00F8AE  00                 	db	0
   108   00F8AF  3D                 	db	61
   109   00F8B0  00                 	db	0
   110   00F8B1  00                 	db	0
   111   00F8B2  2B                 	db	43
   112   00F8B3  00                 	db	0
   113   00F8B4  00                 	db	0
   114                           
   115                           ;initializer for _port_registers
   116   00F8B5  80                 	db	128
   117   00F8B6  0F                 	db	15
   118   00F8B7  81                 	db	129
   119   00F8B8  0F                 	db	15
   120   00F8B9  82                 	db	130
   121   00F8BA  0F                 	db	15
   122   00F8BB  83                 	db	131
   123   00F8BC  0F                 	db	15
   124   00F8BD  84                 	db	132
   125   00F8BE  0F                 	db	15
   126                           
   127                           ;initializer for _lat_registers
   128   00F8BF  89                 	db	137
   129   00F8C0  0F                 	db	15
   130   00F8C1  8A                 	db	138
   131   00F8C2  0F                 	db	15
   132   00F8C3  8B                 	db	139
   133   00F8C4  0F                 	db	15
   134   00F8C5  8C                 	db	140
   135   00F8C6  0F                 	db	15
   136   00F8C7  8D                 	db	141
   137   00F8C8  0F                 	db	15
   138                           
   139                           ;initializer for _tris_registers
   140   00F8C9  92                 	db	146
   141   00F8CA  0F                 	db	15
   142   00F8CB  93                 	db	147
   143   00F8CC  0F                 	db	15
   144   00F8CD  94                 	db	148
   145   00F8CE  0F                 	db	15
   146   00F8CF  95                 	db	149
   147   00F8D0  0F                 	db	15
   148   00F8D1  96                 	db	150
   149   00F8D2  0F                 	db	15
   150                           
   151                           ;initializer for _keypad1
   152   00F8D3  02                 	db	2
   153   00F8D4  0A                 	db	10
   154   00F8D5  12                 	db	18
   155   00F8D6  1A                 	db	26
   156   00F8D7  62                 	db	98
   157   00F8D8  6A                 	db	106
   158   00F8D9  72                 	db	114
   159   00F8DA  7A                 	db	122
   160                           
   161                           ;initializer for _led1
   162   00F8DB  03                 	db	3
   163   000000                     _PORTE	set	3972
   164   000000                     _PORTD	set	3971
   165   000000                     _PORTC	set	3970
   166   000000                     _PORTB	set	3969
   167   000000                     _PORTA	set	3968
   168   000000                     _LATA	set	3977
   169   000000                     _TRISA	set	3986
   170   000000                     _TRISE	set	3990
   171   000000                     _TRISD	set	3989
   172   000000                     _TRISC	set	3988
   173   000000                     _TRISB	set	3987
   174   000000                     _LATE	set	3981
   175   000000                     _LATD	set	3980
   176   000000                     _LATC	set	3979
   177   000000                     _LATB	set	3978
   178                           
   179                           ; #config settings
   180                           
   181                           	psect	cinit
   182   00F84E                     __pcinit:
   183                           	callstack 0
   184   00F84E                     start_initialization:
   185                           	callstack 0
   186   00F84E                     __initialization:
   187                           	callstack 0
   188                           
   189                           ; Initialize objects allocated to COMRAM (87 bytes)
   190                           ; load TBLPTR registers with __pidataCOMRAM
   191   00F84E  0E85               	movlw	low __pidataCOMRAM
   192   00F850  6EF6               	movwf	tblptrl,c
   193   00F852  0EF8               	movlw	high __pidataCOMRAM
   194   00F854  6EF7               	movwf	tblptrh,c
   195   00F856  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   196   00F858  6EF8               	movwf	tblptru,c
   197   00F85A  EE00  F001         	lfsr	0,__pdataCOMRAM
   198   00F85E  EE10 F057          	lfsr	1,87
   199   00F862                     copy_data0:
   200   00F862  0009               	tblrd		*+
   201   00F864  CFF5 FFEE          	movff	tablat,postinc0
   202   00F868  50E5               	movf	postdec1,w,c
   203   00F86A  50E1               	movf	fsr1l,w,c
   204   00F86C  E1FA               	bnz	copy_data0
   205                           
   206                           ; Clear objects allocated to COMRAM (8 bytes)
   207   00F86E  EE00  F06E         	lfsr	0,__pbssCOMRAM
   208   00F872  0E08               	movlw	8
   209   00F874                     clear_0:
   210   00F874  6AEE               	clrf	postinc0,c
   211   00F876  06E8               	decf	wreg,f,c
   212   00F878  E1FD               	bnz	clear_0
   213   00F87A                     end_of_initialization:
   214                           	callstack 0
   215   00F87A                     __end_of__initialization:
   216                           	callstack 0
   217   00F87A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   218   00F87C  6EF8               	movwf	tblptru,c
   219   00F87E  0100               	movlb	0
   220   00F880  EF6E  F07C         	goto	_main	;jump to C main() function
   221                           
   222                           	psect	bssCOMRAM
   223   00006E                     __pbssCOMRAM:
   224                           	callstack 0
   225   00006E                     Relay_Turn_OFF@F2885:
   226                           	callstack 0
   227   00006E                     	ds	1
   228   00006F                     Relay_Turn_ON@F2880:
   229                           	callstack 0
   230   00006F                     	ds	1
   231   000070                     Relay_Initialize@F2875:
   232                           	callstack 0
   233   000070                     	ds	1
   234   000071                     led_toggle@F2896:
   235                           	callstack 0
   236   000071                     	ds	1
   237   000072                     led_turn_off@F2891:
   238                           	callstack 0
   239   000072                     	ds	1
   240   000073                     led_turn_on@F2886:
   241                           	callstack 0
   242   000073                     	ds	1
   243   000074                     led_initialize@F2881:
   244                           	callstack 0
   245   000074                     	ds	1
   246   000075                     _keypad_value:
   247                           	callstack 0
   248   000075                     	ds	1
   249                           
   250                           	psect	dataCOMRAM
   251   000001                     __pdataCOMRAM:
   252                           	callstack 0
   253   000001                     _keypad_btn_values:
   254                           	callstack 0
   255   000001                     	ds	48
   256   000031                     _port_registers:
   257                           	callstack 0
   258   000031                     	ds	10
   259   00003B                     _lat_registers:
   260                           	callstack 0
   261   00003B                     	ds	10
   262   000045                     _tris_registers:
   263                           	callstack 0
   264   000045                     	ds	10
   265   00004F                     _keypad1:
   266                           	callstack 0
   267   00004F                     	ds	8
   268   000057                     _led1:
   269                           	callstack 0
   270   000057                     	ds	1
   271                           
   272                           	psect	cstackCOMRAM
   273   000058                     __pcstackCOMRAM:
   274                           	callstack 0
   275   000058                     gpio_pin_direction_intialize@pin_config:
   276                           	callstack 0
   277   000058                     gpio_pin_write_logic@pin_config:
   278                           	callstack 0
   279   000058                     gpio_pin_read_logic@pin_config:
   280                           	callstack 0
   281                           
   282                           ; 2 bytes @ 0x0
   283   000058                     	ds	2
   284   00005A                     ??_gpio_pin_direction_intialize:
   285   00005A                     gpio_pin_write_logic@logic:
   286                           	callstack 0
   287   00005A                     gpio_pin_read_logic@logic:
   288                           	callstack 0
   289                           
   290                           ; 2 bytes @ 0x2
   291   00005A                     	ds	1
   292   00005B                     ??_gpio_pin_write_logic:
   293                           
   294                           ; 1 bytes @ 0x3
   295   00005B                     	ds	1
   296   00005C                     ??_gpio_pin_read_logic:
   297                           
   298                           ; 1 bytes @ 0x4
   299   00005C                     	ds	4
   300   000060                     gpio_pin_direction_intialize@ret:
   301                           	callstack 0
   302                           
   303                           ; 1 bytes @ 0x8
   304   000060                     	ds	1
   305   000061                     gpio_pin_write_logic@ret:
   306                           	callstack 0
   307   000061                     gpio_pin_read_logic@ret:
   308                           	callstack 0
   309                           
   310                           ; 1 bytes @ 0x9
   311   000061                     	ds	1
   312   000062                     led_turn_on@led:
   313                           	callstack 0
   314   000062                     led_turn_off@led:
   315                           	callstack 0
   316   000062                     gpio_pin_intialize@pin_config:
   317                           	callstack 0
   318   000062                     keypade_get_value@kepad_obj:
   319                           	callstack 0
   320                           
   321                           ; 2 bytes @ 0xA
   322   000062                     	ds	2
   323   000064                     ??_gpio_pin_intialize:
   324   000064                     ??_led_turn_on:
   325   000064                     ??_led_turn_off:
   326   000064                     keypade_get_value@value:
   327                           	callstack 0
   328                           
   329                           ; 2 bytes @ 0xC
   330   000064                     	ds	1
   331   000065                     led_turn_on@ret:
   332                           	callstack 0
   333   000065                     led_turn_off@ret:
   334                           	callstack 0
   335   000065                     gpio_pin_intialize@ret:
   336                           	callstack 0
   337                           
   338                           ; 1 bytes @ 0xD
   339   000065                     	ds	1
   340   000066                     ??_keypade_get_value:
   341   000066                     led_turn_on@pin_obj:
   342                           	callstack 0
   343   000066                     led_turn_off@pin_obj:
   344                           	callstack 0
   345   000066                     led_initialize@led:
   346                           	callstack 0
   347   000066                     keypade_initialize@kepad_obj:
   348                           	callstack 0
   349                           
   350                           ; 2 bytes @ 0xE
   351   000066                     	ds	2
   352   000068                     ??_led_initialize:
   353   000068                     ??_keypade_initialize:
   354                           
   355                           ; 1 bytes @ 0x10
   356   000068                     	ds	1
   357   000069                     led_initialize@ret:
   358                           	callstack 0
   359                           
   360                           ; 1 bytes @ 0x11
   361   000069                     	ds	1
   362   00006A                     led_initialize@pin_obj:
   363                           	callstack 0
   364   00006A                     keypade_initialize@row_counter:
   365                           	callstack 0
   366   00006A                     keypade_get_value@column_logic:
   367                           	callstack 0
   368                           
   369                           ; 1 bytes @ 0x12
   370   00006A                     	ds	1
   371   00006B                     keypade_initialize@ret:
   372                           	callstack 0
   373   00006B                     keypade_get_value@l_row_counter:
   374                           	callstack 0
   375                           
   376                           ; 1 bytes @ 0x13
   377   00006B                     	ds	1
   378   00006C                     keypade_initialize@row_index:
   379                           	callstack 0
   380   00006C                     keypade_get_value@l_row_index:
   381                           	callstack 0
   382                           
   383                           ; 1 bytes @ 0x14
   384   00006C                     	ds	1
   385   00006D                     keypade_initialize@column_index:
   386                           	callstack 0
   387   00006D                     keypade_get_value@l_column_index:
   388                           	callstack 0
   389                           
   390                           ; 1 bytes @ 0x15
   391   00006D                     	ds	1
   392   00006E                     
   393                           ; 1 bytes @ 0x16
   394 ;;
   395 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   396 ;;
   397 ;; *************** function _main *****************
   398 ;; Defined at:
   399 ;;		line 10 in file "application.c"
   400 ;; Parameters:    Size  Location     Type
   401 ;;		None
   402 ;; Auto vars:     Size  Location     Type
   403 ;;  ret             1    0        unsigned char 
   404 ;; Return value:  Size  Location     Type
   405 ;;                  2  254[None  ] int 
   406 ;; Registers used:
   407 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   408 ;; Tracked objects:
   409 ;;		On entry : 0/0
   410 ;;		On exit  : 0/0
   411 ;;		Unchanged: 0/0
   412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   416 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   417 ;;Total ram usage:        0 bytes
   418 ;; Hardware stack levels required when called: 5
   419 ;; This function calls:
   420 ;;		_application_initialize
   421 ;;		_keypade_get_value
   422 ;;		_led_turn_off
   423 ;;		_led_turn_on
   424 ;; This function is called by:
   425 ;;		Startup code after reset
   426 ;; This function uses a non-reentrant model
   427 ;;
   428                           
   429                           	psect	text0
   430   00F8DC                     __ptext0:
   431                           	callstack 0
   432   00F8DC                     _main:
   433                           	callstack 26
   434   00F8DC                     
   435                           ;application.c: 13: application_initialize();
   436   00F8DC  EC17  F07C         	call	_application_initialize	;wreg free
   437   00F8E0                     l1851:
   438                           
   439                           ;application.c: 16:  keypade_get_value(&keypad1, &keypad_value );
   440   00F8E0  0E4F               	movlw	low _keypad1
   441   00F8E2  6E62               	movwf	keypade_get_value@kepad_obj^0,c
   442   00F8E4  0E00               	movlw	high _keypad1
   443   00F8E6  6E63               	movwf	(keypade_get_value@kepad_obj+1)^0,c
   444   00F8E8  0E75               	movlw	low _keypad_value
   445   00F8EA  6E64               	movwf	keypade_get_value@value^0,c
   446   00F8EC  0E00               	movlw	high _keypad_value
   447   00F8EE  6E65               	movwf	(keypade_get_value@value+1)^0,c
   448   00F8F0  EC32  F07E         	call	_keypade_get_value	;wreg free
   449   00F8F4                     
   450                           ;application.c: 17:  if(keypad_value == '7'){
   451   00F8F4  0E37               	movlw	55
   452   00F8F6  1875               	xorwf	_keypad_value^0,w,c
   453   00F8F8  A4D8               	btfss	status,2,c
   454   00F8FA  EF81  F07C         	goto	u1241
   455   00F8FE  EF83  F07C         	goto	u1240
   456   00F902                     u1241:
   457   00F902  EF8B  F07C         	goto	l1857
   458   00F906                     u1240:
   459   00F906  0E57               	movlw	low _led1
   460   00F908  6E62               	movwf	led_turn_on@led^0,c
   461   00F90A  0E00               	movlw	high _led1
   462   00F90C  6E63               	movwf	(led_turn_on@led+1)^0,c
   463   00F90E  EC54  F07D         	call	_led_turn_on	;wreg free
   464                           
   465                           ;application.c: 19:  }
   466   00F912  EF70  F07C         	goto	l1851
   467   00F916                     l1857:
   468   00F916  0E38               	movlw	56
   469   00F918  1875               	xorwf	_keypad_value^0,w,c
   470   00F91A  A4D8               	btfss	status,2,c
   471   00F91C  EF92  F07C         	goto	u1251
   472   00F920  EF94  F07C         	goto	u1250
   473   00F924                     u1251:
   474   00F924  EF9C  F07C         	goto	l257
   475   00F928                     u1250:
   476   00F928  0E57               	movlw	low _led1
   477   00F92A  6E62               	movwf	led_turn_off@led^0,c
   478   00F92C  0E00               	movlw	high _led1
   479   00F92E  6E63               	movwf	(led_turn_off@led+1)^0,c
   480   00F930  EC14  F07D         	call	_led_turn_off	;wreg free
   481                           
   482                           ;application.c: 22:  }
   483   00F934  EF70  F07C         	goto	l1851
   484   00F938                     l257:
   485   00F938  EF70  F07C         	goto	l1851
   486   00F93C  EF00  F000         	goto	start
   487   00F940                     __end_of_main:
   488                           	callstack 0
   489                           
   490 ;; *************** function _led_turn_on *****************
   491 ;; Defined at:
   492 ;;		line 30 in file "ECU_Layer/LED/ecu_led.c"
   493 ;; Parameters:    Size  Location     Type
   494 ;;  led             2   10[COMRAM] PTR const struct .
   495 ;;		 -> led1(1), 
   496 ;; Auto vars:     Size  Location     Type
   497 ;;  pin_obj         1   14[COMRAM] struct .
   498 ;;  ret             1   13[COMRAM] unsigned char 
   499 ;; Return value:  Size  Location     Type
   500 ;;                  1    wreg      unsigned char 
   501 ;; Registers used:
   502 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   503 ;; Tracked objects:
   504 ;;		On entry : 0/0
   505 ;;		On exit  : 0/0
   506 ;;		Unchanged: 0/0
   507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   508 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   509 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   510 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   511 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   512 ;;Total ram usage:        5 bytes
   513 ;; Hardware stack levels used: 1
   514 ;; Hardware stack levels required when called: 1
   515 ;; This function calls:
   516 ;;		_gpio_pin_write_logic
   517 ;; This function is called by:
   518 ;;		_main
   519 ;; This function uses a non-reentrant model
   520 ;;
   521                           
   522                           	psect	text1
   523   00FAA8                     __ptext1:
   524                           	callstack 0
   525   00FAA8                     _led_turn_on:
   526                           	callstack 29
   527   00FAA8                     
   528                           ;ECU_Layer/LED/ecu_led.c: 31: Std_ReturnType ret = (Std_ReturnType)0x01;
   529   00FAA8  0E01               	movlw	1
   530   00FAAA  6E65               	movwf	led_turn_on@ret^0,c
   531   00FAAC                     
   532                           ;ECU_Layer/LED/ecu_led.c: 32: if(led == ((void*)0)){
   533   00FAAC  5062               	movf	led_turn_on@led^0,w,c
   534   00FAAE  1063               	iorwf	(led_turn_on@led+1)^0,w,c
   535   00FAB0  A4D8               	btfss	status,2,c
   536   00FAB2  EF5D  F07D         	goto	u941
   537   00FAB6  EF5F  F07D         	goto	u940
   538   00FABA                     u941:
   539   00FABA  EF63  F07D         	goto	l54
   540   00FABE                     u940:
   541   00FABE                     
   542                           ;ECU_Layer/LED/ecu_led.c: 33:    ret = (Std_ReturnType)0x00;
   543   00FABE  0E00               	movlw	0
   544   00FAC0  6E65               	movwf	led_turn_on@ret^0,c
   545                           
   546                           ;ECU_Layer/LED/ecu_led.c: 34: }
   547   00FAC2  EF92  F07D         	goto	l1629
   548   00FAC6                     l54:
   549                           
   550                           ;ECU_Layer/LED/ecu_led.c: 36:      pin_config_t pin_obj = {.port = led->Port_Name,
   551   00FAC6  C073  F066         	movff	led_turn_on@F2886,led_turn_on@pin_obj
   552   00FACA  C062  FFD9         	movff	led_turn_on@led,fsr2l
   553   00FACE  C063  FFDA         	movff	led_turn_on@led+1,fsr2h
   554   00FAD2  50DF               	movf	223,w,c
   555   00FAD4  0B0F               	andlw	15
   556   00FAD6  6E64               	movwf	??_led_turn_on^0,c
   557   00FAD8  5066               	movf	led_turn_on@pin_obj^0,w,c
   558   00FADA  1864               	xorwf	??_led_turn_on^0,w,c
   559   00FADC  0BF8               	andlw	-8
   560   00FADE  1864               	xorwf	??_led_turn_on^0,w,c
   561   00FAE0  6E66               	movwf	led_turn_on@pin_obj^0,c
   562   00FAE2  C062  FFD9         	movff	led_turn_on@led,fsr2l
   563   00FAE6  C063  FFDA         	movff	led_turn_on@led+1,fsr2h
   564   00FAEA  38DF               	swapf	223,w,c
   565   00FAEC  0B07               	andlw	7
   566   00FAEE  6E64               	movwf	??_led_turn_on^0,c
   567   00FAF0  4664               	rlncf	??_led_turn_on^0,f,c
   568   00FAF2  4664               	rlncf	??_led_turn_on^0,f,c
   569   00FAF4  4664               	rlncf	??_led_turn_on^0,f,c
   570   00FAF6  5066               	movf	led_turn_on@pin_obj^0,w,c
   571   00FAF8  1864               	xorwf	??_led_turn_on^0,w,c
   572   00FAFA  0BC7               	andlw	-57
   573   00FAFC  1864               	xorwf	??_led_turn_on^0,w,c
   574   00FAFE  6E66               	movwf	led_turn_on@pin_obj^0,c
   575   00FB00  9C66               	bcf	led_turn_on@pin_obj^0,6,c
   576   00FB02  C062  FFD9         	movff	led_turn_on@led,fsr2l
   577   00FB06  C063  FFDA         	movff	led_turn_on@led+1,fsr2h
   578   00FB0A  AEDF               	btfss	indf2,7,c
   579   00FB0C  D002               	bra	u955
   580   00FB0E  8E66               	bsf	led_turn_on@pin_obj^0,7,c
   581   00FB10  D001               	bra	u957
   582   00FB12                     u955:
   583   00FB12  9E66               	bcf	led_turn_on@pin_obj^0,7,c
   584   00FB14                     u957:
   585   00FB14                     
   586                           ;ECU_Layer/LED/ecu_led.c: 41:      gpio_pin_write_logic(&pin_obj, HIGH);
   587   00FB14  0E66               	movlw	low led_turn_on@pin_obj
   588   00FB16  6E58               	movwf	gpio_pin_write_logic@pin_config^0,c
   589   00FB18  0E00               	movlw	high led_turn_on@pin_obj
   590   00FB1A  6E59               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
   591   00FB1C  0E01               	movlw	1
   592   00FB1E  6E5A               	movwf	gpio_pin_write_logic@logic^0,c
   593   00FB20  ECC0  F07E         	call	_gpio_pin_write_logic	;wreg free
   594   00FB24                     l1629:
   595                           
   596                           ;ECU_Layer/LED/ecu_led.c: 43: return ret;
   597   00FB24  5065               	movf	led_turn_on@ret^0,w,c
   598   00FB26  0012               	return		;funcret
   599   00FB28                     __end_of_led_turn_on:
   600                           	callstack 0
   601                           
   602 ;; *************** function _led_turn_off *****************
   603 ;; Defined at:
   604 ;;		line 52 in file "ECU_Layer/LED/ecu_led.c"
   605 ;; Parameters:    Size  Location     Type
   606 ;;  led             2   10[COMRAM] PTR const struct .
   607 ;;		 -> led1(1), 
   608 ;; Auto vars:     Size  Location     Type
   609 ;;  pin_obj         1   14[COMRAM] struct .
   610 ;;  ret             1   13[COMRAM] unsigned char 
   611 ;; Return value:  Size  Location     Type
   612 ;;                  1    wreg      unsigned char 
   613 ;; Registers used:
   614 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   615 ;; Tracked objects:
   616 ;;		On entry : 0/0
   617 ;;		On exit  : 0/0
   618 ;;		Unchanged: 0/0
   619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   620 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   621 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   622 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   623 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   624 ;;Total ram usage:        5 bytes
   625 ;; Hardware stack levels used: 1
   626 ;; Hardware stack levels required when called: 1
   627 ;; This function calls:
   628 ;;		_gpio_pin_write_logic
   629 ;; This function is called by:
   630 ;;		_main
   631 ;; This function uses a non-reentrant model
   632 ;;
   633                           
   634                           	psect	text2
   635   00FA28                     __ptext2:
   636                           	callstack 0
   637   00FA28                     _led_turn_off:
   638                           	callstack 29
   639   00FA28                     
   640                           ;ECU_Layer/LED/ecu_led.c: 53: Std_ReturnType ret = (Std_ReturnType)0x01;
   641   00FA28  0E01               	movlw	1
   642   00FA2A  6E65               	movwf	led_turn_off@ret^0,c
   643   00FA2C                     
   644                           ;ECU_Layer/LED/ecu_led.c: 54: if(led == ((void*)0)){
   645   00FA2C  5062               	movf	led_turn_off@led^0,w,c
   646   00FA2E  1063               	iorwf	(led_turn_off@led+1)^0,w,c
   647   00FA30  A4D8               	btfss	status,2,c
   648   00FA32  EF1D  F07D         	goto	u961
   649   00FA36  EF1F  F07D         	goto	u960
   650   00FA3A                     u961:
   651   00FA3A  EF23  F07D         	goto	l61
   652   00FA3E                     u960:
   653   00FA3E                     
   654                           ;ECU_Layer/LED/ecu_led.c: 55:    ret = (Std_ReturnType)0x00;
   655   00FA3E  0E00               	movlw	0
   656   00FA40  6E65               	movwf	led_turn_off@ret^0,c
   657                           
   658                           ;ECU_Layer/LED/ecu_led.c: 56: }
   659   00FA42  EF52  F07D         	goto	l1647
   660   00FA46                     l61:
   661                           
   662                           ;ECU_Layer/LED/ecu_led.c: 58:      pin_config_t pin_obj = {.port = led->Port_Name,
   663   00FA46  C072  F066         	movff	led_turn_off@F2891,led_turn_off@pin_obj
   664   00FA4A  C062  FFD9         	movff	led_turn_off@led,fsr2l
   665   00FA4E  C063  FFDA         	movff	led_turn_off@led+1,fsr2h
   666   00FA52  50DF               	movf	223,w,c
   667   00FA54  0B0F               	andlw	15
   668   00FA56  6E64               	movwf	??_led_turn_off^0,c
   669   00FA58  5066               	movf	led_turn_off@pin_obj^0,w,c
   670   00FA5A  1864               	xorwf	??_led_turn_off^0,w,c
   671   00FA5C  0BF8               	andlw	-8
   672   00FA5E  1864               	xorwf	??_led_turn_off^0,w,c
   673   00FA60  6E66               	movwf	led_turn_off@pin_obj^0,c
   674   00FA62  C062  FFD9         	movff	led_turn_off@led,fsr2l
   675   00FA66  C063  FFDA         	movff	led_turn_off@led+1,fsr2h
   676   00FA6A  38DF               	swapf	223,w,c
   677   00FA6C  0B07               	andlw	7
   678   00FA6E  6E64               	movwf	??_led_turn_off^0,c
   679   00FA70  4664               	rlncf	??_led_turn_off^0,f,c
   680   00FA72  4664               	rlncf	??_led_turn_off^0,f,c
   681   00FA74  4664               	rlncf	??_led_turn_off^0,f,c
   682   00FA76  5066               	movf	led_turn_off@pin_obj^0,w,c
   683   00FA78  1864               	xorwf	??_led_turn_off^0,w,c
   684   00FA7A  0BC7               	andlw	-57
   685   00FA7C  1864               	xorwf	??_led_turn_off^0,w,c
   686   00FA7E  6E66               	movwf	led_turn_off@pin_obj^0,c
   687   00FA80  9C66               	bcf	led_turn_off@pin_obj^0,6,c
   688   00FA82  C062  FFD9         	movff	led_turn_off@led,fsr2l
   689   00FA86  C063  FFDA         	movff	led_turn_off@led+1,fsr2h
   690   00FA8A  AEDF               	btfss	indf2,7,c
   691   00FA8C  D002               	bra	u975
   692   00FA8E  8E66               	bsf	led_turn_off@pin_obj^0,7,c
   693   00FA90  D001               	bra	u977
   694   00FA92                     u975:
   695   00FA92  9E66               	bcf	led_turn_off@pin_obj^0,7,c
   696   00FA94                     u977:
   697   00FA94                     
   698                           ;ECU_Layer/LED/ecu_led.c: 63:       gpio_pin_write_logic(&pin_obj, LOW);
   699   00FA94  0E66               	movlw	low led_turn_off@pin_obj
   700   00FA96  6E58               	movwf	gpio_pin_write_logic@pin_config^0,c
   701   00FA98  0E00               	movlw	high led_turn_off@pin_obj
   702   00FA9A  6E59               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
   703   00FA9C  0E00               	movlw	0
   704   00FA9E  6E5A               	movwf	gpio_pin_write_logic@logic^0,c
   705   00FAA0  ECC0  F07E         	call	_gpio_pin_write_logic	;wreg free
   706   00FAA4                     l1647:
   707                           
   708                           ;ECU_Layer/LED/ecu_led.c: 65: return ret;
   709   00FAA4  5065               	movf	led_turn_off@ret^0,w,c
   710   00FAA6  0012               	return		;funcret
   711   00FAA8                     __end_of_led_turn_off:
   712                           	callstack 0
   713                           
   714 ;; *************** function _keypade_get_value *****************
   715 ;; Defined at:
   716 ;;		line 48 in file "ECU_Layer/Keypad/ecu_keypad.c"
   717 ;; Parameters:    Size  Location     Type
   718 ;;  kepad_obj       2   10[COMRAM] PTR const struct .
   719 ;;		 -> keypad1(8), 
   720 ;;  value           2   12[COMRAM] PTR unsigned char 
   721 ;;		 -> keypad_value(1), 
   722 ;; Auto vars:     Size  Location     Type
   723 ;;  l_column_ind    1   21[COMRAM] unsigned char 
   724 ;;  l_row_index     1   20[COMRAM] unsigned char 
   725 ;;  l_row_counte    1   19[COMRAM] unsigned char 
   726 ;;  column_logic    1   18[COMRAM] unsigned char 
   727 ;;  ret             1    0        unsigned char 
   728 ;; Return value:  Size  Location     Type
   729 ;;                  1    wreg      unsigned char 
   730 ;; Registers used:
   731 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   732 ;; Tracked objects:
   733 ;;		On entry : 0/0
   734 ;;		On exit  : 0/0
   735 ;;		Unchanged: 0/0
   736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   737 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   738 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   739 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   740 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   741 ;;Total ram usage:       12 bytes
   742 ;; Hardware stack levels used: 1
   743 ;; Hardware stack levels required when called: 1
   744 ;; This function calls:
   745 ;;		_gpio_pin_read_logic
   746 ;;		_gpio_pin_write_logic
   747 ;; This function is called by:
   748 ;;		_main
   749 ;; This function uses a non-reentrant model
   750 ;;
   751                           
   752                           	psect	text3
   753   00FC64                     __ptext3:
   754                           	callstack 0
   755   00FC64                     _keypade_get_value:
   756                           	callstack 29
   757   00FC64                     
   758                           ;ECU_Layer/Keypad/ecu_keypad.c: 50: uint_8 l_row_index = 0;
   759   00FC64  0E00               	movlw	0
   760   00FC66  6E6C               	movwf	keypade_get_value@l_row_index^0,c
   761                           
   762                           ;ECU_Layer/Keypad/ecu_keypad.c: 51: uint_8 l_column_index = 0;
   763   00FC68  0E00               	movlw	0
   764   00FC6A  6E6D               	movwf	keypade_get_value@l_column_index^0,c
   765                           
   766                           ;ECU_Layer/Keypad/ecu_keypad.c: 52: uint_8 l_row_counter = 0;
   767   00FC6C  0E00               	movlw	0
   768   00FC6E  6E6B               	movwf	keypade_get_value@l_row_counter^0,c
   769                           
   770                           ;ECU_Layer/Keypad/ecu_keypad.c: 53: uint_8 column_logic = 0;
   771   00FC70  0E00               	movlw	0
   772   00FC72  6E6A               	movwf	keypade_get_value@column_logic^0,c
   773   00FC74                     
   774                           ;ECU_Layer/Keypad/ecu_keypad.c: 54: if((kepad_obj == ((void*)0)) || (value == ((void*)0)
      +                          )){
   775   00FC74  5062               	movf	keypade_get_value@kepad_obj^0,w,c
   776   00FC76  1063               	iorwf	(keypade_get_value@kepad_obj+1)^0,w,c
   777   00FC78  B4D8               	btfsc	status,2,c
   778   00FC7A  EF41  F07E         	goto	u981
   779   00FC7E  EF43  F07E         	goto	u980
   780   00FC82                     u981:
   781   00FC82  EF4C  F07E         	goto	l1659
   782   00FC86                     u980:
   783   00FC86  5064               	movf	keypade_get_value@value^0,w,c
   784   00FC88  1065               	iorwf	(keypade_get_value@value+1)^0,w,c
   785   00FC8A  A4D8               	btfss	status,2,c
   786   00FC8C  EF4A  F07E         	goto	u991
   787   00FC90  EF4C  F07E         	goto	u990
   788   00FC94                     u991:
   789   00FC94  EF4E  F07E         	goto	l1661
   790   00FC98                     u990:
   791   00FC98                     l1659:
   792                           
   793                           ;ECU_Layer/Keypad/ecu_keypad.c: 56: }
   794   00FC98  EFBF  F07E         	goto	l300
   795   00FC9C                     l1661:
   796                           
   797                           ;ECU_Layer/Keypad/ecu_keypad.c: 59:  for (l_row_index = 0 ; l_row_index <= 4; l_row_inde
      +                          x++){
   798   00FC9C  0E00               	movlw	0
   799   00FC9E  6E6C               	movwf	keypade_get_value@l_row_index^0,c
   800   00FCA0                     l1667:
   801                           
   802                           ;ECU_Layer/Keypad/ecu_keypad.c: 60:      for (l_row_counter = 0 ; l_row_counter <= 4; l_
      +                          row_counter++){
   803   00FCA0  0E00               	movlw	0
   804   00FCA2  6E6B               	movwf	keypade_get_value@l_row_counter^0,c
   805   00FCA4                     l1673:
   806   00FCA4  506B               	movf	keypade_get_value@l_row_counter^0,w,c
   807   00FCA6  2462               	addwf	keypade_get_value@kepad_obj^0,w,c
   808   00FCA8  6E58               	movwf	gpio_pin_write_logic@pin_config^0,c
   809   00FCAA  0E00               	movlw	0
   810   00FCAC  2063               	addwfc	(keypade_get_value@kepad_obj+1)^0,w,c
   811   00FCAE  6E59               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
   812   00FCB0  0E00               	movlw	0
   813   00FCB2  6E5A               	movwf	gpio_pin_write_logic@logic^0,c
   814   00FCB4  ECC0  F07E         	call	_gpio_pin_write_logic	;wreg free
   815   00FCB8                     
   816                           ;ECU_Layer/Keypad/ecu_keypad.c: 62:      _delay(20000);
   817   00FCB8  0E1A               	movlw	26
   818   00FCBA  6E66               	movwf	??_keypade_get_value^0,c
   819   00FCBC  0EF8               	movlw	248
   820   00FCBE                     u1267:
   821   00FCBE  2EE8               	decfsz	wreg,f,c
   822   00FCC0  D7FE               	bra	u1267
   823   00FCC2  2E66               	decfsz	??_keypade_get_value^0,f,c
   824   00FCC4  D7FC               	bra	u1267
   825   00FCC6  D000               	nop2	
   826   00FCC8                     
   827                           ;ECU_Layer/Keypad/ecu_keypad.c: 63:      }
   828   00FCC8  2A6B               	incf	keypade_get_value@l_row_counter^0,f,c
   829   00FCCA  0E04               	movlw	4
   830   00FCCC  646B               	cpfsgt	keypade_get_value@l_row_counter^0,c
   831   00FCCE  EF6B  F07E         	goto	u1001
   832   00FCD2  EF6D  F07E         	goto	u1000
   833   00FCD6                     u1001:
   834   00FCD6  EF52  F07E         	goto	l1673
   835   00FCDA                     u1000:
   836   00FCDA  506C               	movf	keypade_get_value@l_row_index^0,w,c
   837   00FCDC  2462               	addwf	keypade_get_value@kepad_obj^0,w,c
   838   00FCDE  6E58               	movwf	gpio_pin_write_logic@pin_config^0,c
   839   00FCE0  0E00               	movlw	0
   840   00FCE2  2063               	addwfc	(keypade_get_value@kepad_obj+1)^0,w,c
   841   00FCE4  6E59               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
   842   00FCE6  0E01               	movlw	1
   843   00FCE8  6E5A               	movwf	gpio_pin_write_logic@logic^0,c
   844   00FCEA  ECC0  F07E         	call	_gpio_pin_write_logic	;wreg free
   845   00FCEE                     
   846                           ;ECU_Layer/Keypad/ecu_keypad.c: 65:       for(l_column_index = 0 ; l_column_index <= 4; 
      +                          l_column_index++){
   847   00FCEE  0E00               	movlw	0
   848   00FCF0  6E6D               	movwf	keypade_get_value@l_column_index^0,c
   849   00FCF2                     l1689:
   850   00FCF2  506D               	movf	keypade_get_value@l_column_index^0,w,c
   851   00FCF4  2462               	addwf	keypade_get_value@kepad_obj^0,w,c
   852   00FCF6  6E66               	movwf	??_keypade_get_value^0,c
   853   00FCF8  0E00               	movlw	0
   854   00FCFA  2063               	addwfc	(keypade_get_value@kepad_obj+1)^0,w,c
   855   00FCFC  6E67               	movwf	(??_keypade_get_value+1)^0,c
   856   00FCFE  0E04               	movlw	4
   857   00FD00  2466               	addwf	??_keypade_get_value^0,w,c
   858   00FD02  6E58               	movwf	gpio_pin_read_logic@pin_config^0,c
   859   00FD04  0E00               	movlw	0
   860   00FD06  2067               	addwfc	(??_keypade_get_value+1)^0,w,c
   861   00FD08  6E59               	movwf	(gpio_pin_read_logic@pin_config+1)^0,c
   862   00FD0A  0E6A               	movlw	low keypade_get_value@column_logic
   863   00FD0C  6E5A               	movwf	gpio_pin_read_logic@logic^0,c
   864   00FD0E  0E00               	movlw	high keypade_get_value@column_logic
   865   00FD10  6E5B               	movwf	(gpio_pin_read_logic@logic+1)^0,c
   866   00FD12  ECD6  F07D         	call	_gpio_pin_read_logic	;wreg free
   867   00FD16                     
   868                           ;ECU_Layer/Keypad/ecu_keypad.c: 67:           if(column_logic == HIGH){
   869   00FD16  046A               	decf	keypade_get_value@column_logic^0,w,c
   870   00FD18  A4D8               	btfss	status,2,c
   871   00FD1A  EF91  F07E         	goto	u1011
   872   00FD1E  EF93  F07E         	goto	u1010
   873   00FD22                     u1011:
   874   00FD22  EFAD  F07E         	goto	l1695
   875   00FD26                     u1010:
   876   00FD26                     
   877                           ;ECU_Layer/Keypad/ecu_keypad.c: 68:           *value = keypad_btn_values[l_row_index][l_
      +                          column_index];
   878   00FD26  506D               	movf	keypade_get_value@l_column_index^0,w,c
   879   00FD28  0D03               	mullw	3
   880   00FD2A  CFF3 F066          	movff	prodl,??_keypade_get_value
   881   00FD2E  CFF4 F067          	movff	prodh,??_keypade_get_value+1
   882   00FD32  506C               	movf	keypade_get_value@l_row_index^0,w,c
   883   00FD34  0D0C               	mullw	12
   884   00FD36  0E01               	movlw	low _keypad_btn_values
   885   00FD38  24F3               	addwf	243,w,c
   886   00FD3A  6E68               	movwf	(??_keypade_get_value+2)^0,c
   887   00FD3C  0E00               	movlw	high _keypad_btn_values
   888   00FD3E  20F4               	addwfc	prodh,w,c
   889   00FD40  6E69               	movwf	(??_keypade_get_value+3)^0,c
   890   00FD42  5066               	movf	??_keypade_get_value^0,w,c
   891   00FD44  2468               	addwf	(??_keypade_get_value+2)^0,w,c
   892   00FD46  6ED9               	movwf	fsr2l,c
   893   00FD48  5067               	movf	(??_keypade_get_value+1)^0,w,c
   894   00FD4A  2069               	addwfc	(??_keypade_get_value+3)^0,w,c
   895   00FD4C  6EDA               	movwf	fsr2h,c
   896   00FD4E  C064  FFE1         	movff	keypade_get_value@value,fsr1l
   897   00FD52  C065  FFE2         	movff	keypade_get_value@value+1,fsr1h
   898   00FD56  CFDF FFE7          	movff	indf2,indf1
   899   00FD5A                     l1695:
   900                           
   901                           ;ECU_Layer/Keypad/ecu_keypad.c: 70:       }
   902   00FD5A  2A6D               	incf	keypade_get_value@l_column_index^0,f,c
   903   00FD5C  0E04               	movlw	4
   904   00FD5E  646D               	cpfsgt	keypade_get_value@l_column_index^0,c
   905   00FD60  EFB4  F07E         	goto	u1021
   906   00FD64  EFB6  F07E         	goto	u1020
   907   00FD68                     u1021:
   908   00FD68  EF79  F07E         	goto	l1689
   909   00FD6C                     u1020:
   910   00FD6C                     
   911                           ;ECU_Layer/Keypad/ecu_keypad.c: 71:  }
   912   00FD6C  2A6C               	incf	keypade_get_value@l_row_index^0,f,c
   913   00FD6E  0E04               	movlw	4
   914   00FD70  646C               	cpfsgt	keypade_get_value@l_row_index^0,c
   915   00FD72  EFBD  F07E         	goto	u1031
   916   00FD76  EFBF  F07E         	goto	u1030
   917   00FD7A                     u1031:
   918   00FD7A  EF50  F07E         	goto	l1667
   919   00FD7E                     u1030:
   920   00FD7E                     l300:
   921   00FD7E  0012               	return		;funcret
   922   00FD80                     __end_of_keypade_get_value:
   923                           	callstack 0
   924                           
   925 ;; *************** function _gpio_pin_read_logic *****************
   926 ;; Defined at:
   927 ;;		line 90 in file "MCAL_Layer/GPIO/hal_gpio.c"
   928 ;; Parameters:    Size  Location     Type
   929 ;;  pin_config      2    0[COMRAM] PTR const struct .
   930 ;;		 -> keypad1.keypad_columns(4), keypad1(8), 
   931 ;;  logic           2    2[COMRAM] PTR enum E2801
   932 ;;		 -> keypade_get_value@column_logic(1), Button_Read_State@Pin_Logic_Status(1), 
   933 ;; Auto vars:     Size  Location     Type
   934 ;;  ret             1    9[COMRAM] unsigned char 
   935 ;; Return value:  Size  Location     Type
   936 ;;                  1    wreg      unsigned char 
   937 ;; Registers used:
   938 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   939 ;; Tracked objects:
   940 ;;		On entry : 0/0
   941 ;;		On exit  : 0/0
   942 ;;		Unchanged: 0/0
   943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   944 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   945 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   946 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   947 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   948 ;;Total ram usage:       10 bytes
   949 ;; Hardware stack levels used: 1
   950 ;; This function calls:
   951 ;;		Nothing
   952 ;; This function is called by:
   953 ;;		_keypade_get_value
   954 ;;		_Button_Read_State
   955 ;; This function uses a non-reentrant model
   956 ;;
   957                           
   958                           	psect	text4
   959   00FBAC                     __ptext4:
   960                           	callstack 0
   961   00FBAC                     _gpio_pin_read_logic:
   962                           	callstack 29
   963   00FBAC                     
   964                           ;MCAL_Layer/GPIO/hal_gpio.c: 91:     Std_ReturnType ret = (Std_ReturnType)0x01;
   965   00FBAC  0E01               	movlw	1
   966   00FBAE  6E61               	movwf	gpio_pin_read_logic@ret^0,c
   967   00FBB0                     
   968                           ;MCAL_Layer/GPIO/hal_gpio.c: 92:       if(pin_config == ((void*)0) || logic == ((void*)0
      +                          ) || pin_config->pin > 8 -1){
   969   00FBB0  5058               	movf	gpio_pin_read_logic@pin_config^0,w,c
   970   00FBB2  1059               	iorwf	(gpio_pin_read_logic@pin_config+1)^0,w,c
   971   00FBB4  B4D8               	btfsc	status,2,c
   972   00FBB6  EFDF  F07D         	goto	u901
   973   00FBBA  EFE1  F07D         	goto	u900
   974   00FBBE                     u901:
   975   00FBBE  EFFB  F07D         	goto	l1601
   976   00FBC2                     u900:
   977   00FBC2  505A               	movf	gpio_pin_read_logic@logic^0,w,c
   978   00FBC4  105B               	iorwf	(gpio_pin_read_logic@logic+1)^0,w,c
   979   00FBC6  B4D8               	btfsc	status,2,c
   980   00FBC8  EFE8  F07D         	goto	u911
   981   00FBCC  EFEA  F07D         	goto	u910
   982   00FBD0                     u911:
   983   00FBD0  EFFB  F07D         	goto	l1601
   984   00FBD4                     u910:
   985   00FBD4  C058  FFD9         	movff	gpio_pin_read_logic@pin_config,fsr2l
   986   00FBD8  C059  FFDA         	movff	gpio_pin_read_logic@pin_config+1,fsr2h
   987   00FBDC  30DF               	rrcf	223,w,c
   988   00FBDE  32E8               	rrcf	wreg,f,c
   989   00FBE0  32E8               	rrcf	wreg,f,c
   990   00FBE2  0B07               	andlw	7
   991   00FBE4  6E5C               	movwf	??_gpio_pin_read_logic^0,c
   992   00FBE6  0E07               	movlw	7
   993   00FBE8  645C               	cpfsgt	??_gpio_pin_read_logic^0,c
   994   00FBEA  EFF9  F07D         	goto	u921
   995   00FBEE  EFFB  F07D         	goto	u920
   996   00FBF2                     u921:
   997   00FBF2  EFFF  F07D         	goto	l1603
   998   00FBF6                     u920:
   999   00FBF6                     l1601:
  1000                           
  1001                           ;MCAL_Layer/GPIO/hal_gpio.c: 93:      ret = (Std_ReturnType)0x00;
  1002   00FBF6  0E00               	movlw	0
  1003   00FBF8  6E61               	movwf	gpio_pin_read_logic@ret^0,c
  1004                           
  1005                           ;MCAL_Layer/GPIO/hal_gpio.c: 94:  }
  1006   00FBFA  EF30  F07E         	goto	l1605
  1007   00FBFE                     l1603:
  1008                           
  1009                           ;MCAL_Layer/GPIO/hal_gpio.c: 96:  *logic = ((*port_registers[pin_config->port] >>pin_con
      +                          fig->pin)&1);
  1010   00FBFE  C058  FFD9         	movff	gpio_pin_read_logic@pin_config,fsr2l
  1011   00FC02  C059  FFDA         	movff	gpio_pin_read_logic@pin_config+1,fsr2h
  1012   00FC06  30DF               	rrcf	223,w,c
  1013   00FC08  32E8               	rrcf	wreg,f,c
  1014   00FC0A  32E8               	rrcf	wreg,f,c
  1015   00FC0C  0B07               	andlw	7
  1016   00FC0E  6E5C               	movwf	??_gpio_pin_read_logic^0,c
  1017   00FC10  C058  FFD9         	movff	gpio_pin_read_logic@pin_config,fsr2l
  1018   00FC14  C059  FFDA         	movff	gpio_pin_read_logic@pin_config+1,fsr2h
  1019   00FC18  50DF               	movf	223,w,c
  1020   00FC1A  0B07               	andlw	7
  1021   00FC1C  6E5D               	movwf	(??_gpio_pin_read_logic+1)^0,c
  1022   00FC1E  505D               	movf	(??_gpio_pin_read_logic+1)^0,w,c
  1023   00FC20  0D02               	mullw	2
  1024   00FC22  0E31               	movlw	low _port_registers
  1025   00FC24  24F3               	addwf	243,w,c
  1026   00FC26  6ED9               	movwf	fsr2l,c
  1027   00FC28  0E00               	movlw	high _port_registers
  1028   00FC2A  20F4               	addwfc	prodh,w,c
  1029   00FC2C  6EDA               	movwf	fsr2h,c
  1030   00FC2E  CFDE F05E          	movff	postinc2,??_gpio_pin_read_logic+2
  1031   00FC32  CFDD F05F          	movff	postdec2,??_gpio_pin_read_logic+3
  1032   00FC36  C05E  FFD9         	movff	??_gpio_pin_read_logic+2,fsr2l
  1033   00FC3A  C05F  FFDA         	movff	??_gpio_pin_read_logic+3,fsr2h
  1034   00FC3E  50DF               	movf	indf2,w,c
  1035   00FC40  6E60               	movwf	(??_gpio_pin_read_logic+4)^0,c
  1036   00FC42  2A5C               	incf	??_gpio_pin_read_logic^0,f,c
  1037   00FC44  EF26  F07E         	goto	u934
  1038   00FC48                     u935:
  1039   00FC48  90D8               	bcf	status,0,c
  1040   00FC4A  3260               	rrcf	(??_gpio_pin_read_logic+4)^0,f,c
  1041   00FC4C                     u934:
  1042   00FC4C  2E5C               	decfsz	??_gpio_pin_read_logic^0,f,c
  1043   00FC4E  EF24  F07E         	goto	u935
  1044   00FC52  5060               	movf	(??_gpio_pin_read_logic+4)^0,w,c
  1045   00FC54  0B01               	andlw	1
  1046   00FC56  C05A  FFD9         	movff	gpio_pin_read_logic@logic,fsr2l
  1047   00FC5A  C05B  FFDA         	movff	gpio_pin_read_logic@logic+1,fsr2h
  1048   00FC5E  6EDF               	movwf	indf2,c
  1049   00FC60                     l1605:
  1050                           
  1051                           ;MCAL_Layer/GPIO/hal_gpio.c: 98:     return ret;
  1052   00FC60  5061               	movf	gpio_pin_read_logic@ret^0,w,c
  1053   00FC62  0012               	return		;funcret
  1054   00FC64                     __end_of_gpio_pin_read_logic:
  1055                           	callstack 0
  1056                           
  1057 ;; *************** function _application_initialize *****************
  1058 ;; Defined at:
  1059 ;;		line 29 in file "application.c"
  1060 ;; Parameters:    Size  Location     Type
  1061 ;;		None
  1062 ;; Auto vars:     Size  Location     Type
  1063 ;;		None
  1064 ;; Return value:  Size  Location     Type
  1065 ;;                  1    wreg      void 
  1066 ;; Registers used:
  1067 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1068 ;; Tracked objects:
  1069 ;;		On entry : 0/0
  1070 ;;		On exit  : 0/0
  1071 ;;		Unchanged: 0/0
  1072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1076 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1077 ;;Total ram usage:        0 bytes
  1078 ;; Hardware stack levels used: 1
  1079 ;; Hardware stack levels required when called: 4
  1080 ;; This function calls:
  1081 ;;		_ECU_Layer_initialize
  1082 ;; This function is called by:
  1083 ;;		_main
  1084 ;; This function uses a non-reentrant model
  1085 ;;
  1086                           
  1087                           	psect	text5
  1088   00F82E                     __ptext5:
  1089                           	callstack 0
  1090   00F82E                     _application_initialize:
  1091                           	callstack 26
  1092   00F82E                     
  1093                           ;application.c: 30:    ECU_Layer_initialize();
  1094   00F82E  EC1A  F07C         	call	_ECU_Layer_initialize	;wreg free
  1095   00F832  0012               	return		;funcret
  1096   00F834                     __end_of_application_initialize:
  1097                           	callstack 0
  1098                           
  1099 ;; *************** function _ECU_Layer_initialize *****************
  1100 ;; Defined at:
  1101 ;;		line 50 in file "ECU_Layer/ecu_init.c"
  1102 ;; Parameters:    Size  Location     Type
  1103 ;;		None
  1104 ;; Auto vars:     Size  Location     Type
  1105 ;;  ret             1    0        unsigned char 
  1106 ;; Return value:  Size  Location     Type
  1107 ;;                  1    wreg      void 
  1108 ;; Registers used:
  1109 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1110 ;; Tracked objects:
  1111 ;;		On entry : 0/0
  1112 ;;		On exit  : 0/0
  1113 ;;		Unchanged: 0/0
  1114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1118 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1119 ;;Total ram usage:        0 bytes
  1120 ;; Hardware stack levels used: 1
  1121 ;; Hardware stack levels required when called: 3
  1122 ;; This function calls:
  1123 ;;		_keypade_initialize
  1124 ;;		_led_initialize
  1125 ;; This function is called by:
  1126 ;;		_application_initialize
  1127 ;; This function uses a non-reentrant model
  1128 ;;
  1129                           
  1130                           	psect	text6
  1131   00F834                     __ptext6:
  1132                           	callstack 0
  1133   00F834                     _ECU_Layer_initialize:
  1134                           	callstack 26
  1135   00F834  0E4F               	movlw	low _keypad1
  1136   00F836  6E66               	movwf	keypade_initialize@kepad_obj^0,c
  1137   00F838  0E00               	movlw	high _keypad1
  1138   00F83A  6E67               	movwf	(keypade_initialize@kepad_obj+1)^0,c
  1139   00F83C  EC94  F07D         	call	_keypade_initialize	;wreg free
  1140   00F840  0E57               	movlw	low _led1
  1141   00F842  6E66               	movwf	led_initialize@led^0,c
  1142   00F844  0E00               	movlw	high _led1
  1143   00F846  6E67               	movwf	(led_initialize@led+1)^0,c
  1144   00F848  ECD6  F07C         	call	_led_initialize	;wreg free
  1145   00F84C  0012               	return		;funcret
  1146   00F84E                     __end_of_ECU_Layer_initialize:
  1147                           	callstack 0
  1148                           
  1149 ;; *************** function _led_initialize *****************
  1150 ;; Defined at:
  1151 ;;		line 7 in file "ECU_Layer/LED/ecu_led.c"
  1152 ;; Parameters:    Size  Location     Type
  1153 ;;  led             2   14[COMRAM] PTR const struct .
  1154 ;;		 -> led1(1), 
  1155 ;; Auto vars:     Size  Location     Type
  1156 ;;  pin_obj         1   18[COMRAM] struct .
  1157 ;;  ret             1   17[COMRAM] unsigned char 
  1158 ;; Return value:  Size  Location     Type
  1159 ;;                  1    wreg      unsigned char 
  1160 ;; Registers used:
  1161 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1162 ;; Tracked objects:
  1163 ;;		On entry : 0/0
  1164 ;;		On exit  : 0/0
  1165 ;;		Unchanged: 0/0
  1166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1167 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1168 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1169 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1170 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1171 ;;Total ram usage:        5 bytes
  1172 ;; Hardware stack levels used: 1
  1173 ;; Hardware stack levels required when called: 2
  1174 ;; This function calls:
  1175 ;;		_gpio_pin_intialize
  1176 ;; This function is called by:
  1177 ;;		_ECU_Layer_initialize
  1178 ;; This function uses a non-reentrant model
  1179 ;;
  1180                           
  1181                           	psect	text7
  1182   00F9AC                     __ptext7:
  1183                           	callstack 0
  1184   00F9AC                     _led_initialize:
  1185                           	callstack 26
  1186   00F9AC                     
  1187                           ;ECU_Layer/LED/ecu_led.c: 9: Std_ReturnType ret = (Std_ReturnType)0x01;
  1188   00F9AC  0E01               	movlw	1
  1189   00F9AE  6E69               	movwf	led_initialize@ret^0,c
  1190   00F9B0                     
  1191                           ;ECU_Layer/LED/ecu_led.c: 10: if(led == ((void*)0)){
  1192   00F9B0  5066               	movf	led_initialize@led^0,w,c
  1193   00F9B2  1067               	iorwf	(led_initialize@led+1)^0,w,c
  1194   00F9B4  A4D8               	btfss	status,2,c
  1195   00F9B6  EFDF  F07C         	goto	u851
  1196   00F9BA  EFE1  F07C         	goto	u850
  1197   00F9BE                     u851:
  1198   00F9BE  EFE5  F07C         	goto	l47
  1199   00F9C2                     u850:
  1200   00F9C2                     
  1201                           ;ECU_Layer/LED/ecu_led.c: 11:    ret = (Std_ReturnType)0x00;
  1202   00F9C2  0E00               	movlw	0
  1203   00F9C4  6E69               	movwf	led_initialize@ret^0,c
  1204                           
  1205                           ;ECU_Layer/LED/ecu_led.c: 12: }
  1206   00F9C6  EF12  F07D         	goto	l1555
  1207   00F9CA                     l47:
  1208                           
  1209                           ;ECU_Layer/LED/ecu_led.c: 14:     pin_config_t pin_obj = {.port = led->Port_Name,
  1210   00F9CA  C074  F06A         	movff	led_initialize@F2881,led_initialize@pin_obj
  1211   00F9CE  C066  FFD9         	movff	led_initialize@led,fsr2l
  1212   00F9D2  C067  FFDA         	movff	led_initialize@led+1,fsr2h
  1213   00F9D6  50DF               	movf	223,w,c
  1214   00F9D8  0B0F               	andlw	15
  1215   00F9DA  6E68               	movwf	??_led_initialize^0,c
  1216   00F9DC  506A               	movf	led_initialize@pin_obj^0,w,c
  1217   00F9DE  1868               	xorwf	??_led_initialize^0,w,c
  1218   00F9E0  0BF8               	andlw	-8
  1219   00F9E2  1868               	xorwf	??_led_initialize^0,w,c
  1220   00F9E4  6E6A               	movwf	led_initialize@pin_obj^0,c
  1221   00F9E6  C066  FFD9         	movff	led_initialize@led,fsr2l
  1222   00F9EA  C067  FFDA         	movff	led_initialize@led+1,fsr2h
  1223   00F9EE  38DF               	swapf	223,w,c
  1224   00F9F0  0B07               	andlw	7
  1225   00F9F2  6E68               	movwf	??_led_initialize^0,c
  1226   00F9F4  4668               	rlncf	??_led_initialize^0,f,c
  1227   00F9F6  4668               	rlncf	??_led_initialize^0,f,c
  1228   00F9F8  4668               	rlncf	??_led_initialize^0,f,c
  1229   00F9FA  506A               	movf	led_initialize@pin_obj^0,w,c
  1230   00F9FC  1868               	xorwf	??_led_initialize^0,w,c
  1231   00F9FE  0BC7               	andlw	-57
  1232   00FA00  1868               	xorwf	??_led_initialize^0,w,c
  1233   00FA02  6E6A               	movwf	led_initialize@pin_obj^0,c
  1234   00FA04  9C6A               	bcf	led_initialize@pin_obj^0,6,c
  1235   00FA06  C066  FFD9         	movff	led_initialize@led,fsr2l
  1236   00FA0A  C067  FFDA         	movff	led_initialize@led+1,fsr2h
  1237   00FA0E  AEDF               	btfss	indf2,7,c
  1238   00FA10  D002               	bra	u865
  1239   00FA12  8E6A               	bsf	led_initialize@pin_obj^0,7,c
  1240   00FA14  D001               	bra	u867
  1241   00FA16                     u865:
  1242   00FA16  9E6A               	bcf	led_initialize@pin_obj^0,7,c
  1243   00FA18                     u867:
  1244   00FA18                     
  1245                           ;ECU_Layer/LED/ecu_led.c: 19:     gpio_pin_intialize(&pin_obj);
  1246   00FA18  0E6A               	movlw	low led_initialize@pin_obj
  1247   00FA1A  6E62               	movwf	gpio_pin_intialize@pin_config^0,c
  1248   00FA1C  0E00               	movlw	high led_initialize@pin_obj
  1249   00FA1E  6E63               	movwf	(gpio_pin_intialize@pin_config+1)^0,c
  1250   00FA20  ECA0  F07C         	call	_gpio_pin_intialize	;wreg free
  1251   00FA24                     l1555:
  1252                           
  1253                           ;ECU_Layer/LED/ecu_led.c: 21: return ret;
  1254   00FA24  5069               	movf	led_initialize@ret^0,w,c
  1255   00FA26  0012               	return		;funcret
  1256   00FA28                     __end_of_led_initialize:
  1257                           	callstack 0
  1258                           
  1259 ;; *************** function _keypade_initialize *****************
  1260 ;; Defined at:
  1261 ;;		line 23 in file "ECU_Layer/Keypad/ecu_keypad.c"
  1262 ;; Parameters:    Size  Location     Type
  1263 ;;  kepad_obj       2   14[COMRAM] PTR const struct .
  1264 ;;		 -> keypad1(8), 
  1265 ;; Auto vars:     Size  Location     Type
  1266 ;;  column_index    1   21[COMRAM] unsigned char 
  1267 ;;  row_index       1   20[COMRAM] unsigned char 
  1268 ;;  ret             1   19[COMRAM] unsigned char 
  1269 ;;  row_counter     1   18[COMRAM] unsigned char 
  1270 ;; Return value:  Size  Location     Type
  1271 ;;                  1    wreg      unsigned char 
  1272 ;; Registers used:
  1273 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1274 ;; Tracked objects:
  1275 ;;		On entry : 0/0
  1276 ;;		On exit  : 0/0
  1277 ;;		Unchanged: 0/0
  1278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1279 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1280 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1281 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1282 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1283 ;;Total ram usage:        8 bytes
  1284 ;; Hardware stack levels used: 1
  1285 ;; Hardware stack levels required when called: 2
  1286 ;; This function calls:
  1287 ;;		_gpio_pin_direction_intialize
  1288 ;;		_gpio_pin_intialize
  1289 ;; This function is called by:
  1290 ;;		_ECU_Layer_initialize
  1291 ;; This function uses a non-reentrant model
  1292 ;;
  1293                           
  1294                           	psect	text8
  1295   00FB28                     __ptext8:
  1296                           	callstack 0
  1297   00FB28                     _keypade_initialize:
  1298                           	callstack 26
  1299   00FB28                     
  1300                           ;ECU_Layer/Keypad/ecu_keypad.c: 25: uint_8 row_index = 0;
  1301   00FB28  0E00               	movlw	0
  1302   00FB2A  6E6C               	movwf	keypade_initialize@row_index^0,c
  1303                           
  1304                           ;ECU_Layer/Keypad/ecu_keypad.c: 26: uint_8 column_index = 0;
  1305   00FB2C  0E00               	movlw	0
  1306   00FB2E  6E6D               	movwf	keypade_initialize@column_index^0,c
  1307                           
  1308                           ;ECU_Layer/Keypad/ecu_keypad.c: 27: uint_8 row_counter = 0;
  1309   00FB30  0E00               	movlw	0
  1310   00FB32  6E6A               	movwf	keypade_initialize@row_counter^0,c
  1311   00FB34                     
  1312                           ;ECU_Layer/Keypad/ecu_keypad.c: 28: if(kepad_obj == ((void*)0)){
  1313   00FB34  5066               	movf	keypade_initialize@kepad_obj^0,w,c
  1314   00FB36  1067               	iorwf	(keypade_initialize@kepad_obj+1)^0,w,c
  1315   00FB38  A4D8               	btfss	status,2,c
  1316   00FB3A  EFA1  F07D         	goto	u871
  1317   00FB3E  EFA3  F07D         	goto	u870
  1318   00FB42                     u871:
  1319   00FB42  EFA7  F07D         	goto	l1565
  1320   00FB46                     u870:
  1321   00FB46                     
  1322                           ;ECU_Layer/Keypad/ecu_keypad.c: 29:     ret = (Std_ReturnType)0x00;
  1323   00FB46  0E00               	movlw	0
  1324   00FB48  6E6B               	movwf	keypade_initialize@ret^0,c
  1325                           
  1326                           ;ECU_Layer/Keypad/ecu_keypad.c: 30: }
  1327   00FB4A  EFD4  F07D         	goto	l1589
  1328   00FB4E                     l1565:
  1329                           
  1330                           ;ECU_Layer/Keypad/ecu_keypad.c: 32:     for (row_index = 0 ; row_index <= 4; row_index++
      +                          ){
  1331   00FB4E  0E00               	movlw	0
  1332   00FB50  6E6C               	movwf	keypade_initialize@row_index^0,c
  1333   00FB52                     l1571:
  1334   00FB52  506C               	movf	keypade_initialize@row_index^0,w,c
  1335   00FB54  2466               	addwf	keypade_initialize@kepad_obj^0,w,c
  1336   00FB56  6E62               	movwf	gpio_pin_intialize@pin_config^0,c
  1337   00FB58  0E00               	movlw	0
  1338   00FB5A  2067               	addwfc	(keypade_initialize@kepad_obj+1)^0,w,c
  1339   00FB5C  6E63               	movwf	(gpio_pin_intialize@pin_config+1)^0,c
  1340   00FB5E  ECA0  F07C         	call	_gpio_pin_intialize	;wreg free
  1341   00FB62                     
  1342                           ;ECU_Layer/Keypad/ecu_keypad.c: 34:     }
  1343   00FB62  2A6C               	incf	keypade_initialize@row_index^0,f,c
  1344   00FB64  0E04               	movlw	4
  1345   00FB66  646C               	cpfsgt	keypade_initialize@row_index^0,c
  1346   00FB68  EFB8  F07D         	goto	u881
  1347   00FB6C  EFBA  F07D         	goto	u880
  1348   00FB70                     u881:
  1349   00FB70  EFA9  F07D         	goto	l1571
  1350   00FB74                     u880:
  1351   00FB74                     
  1352                           ;ECU_Layer/Keypad/ecu_keypad.c: 35:     for (column_index = 0 ; column_index <= 4; colum
      +                          n_index++){
  1353   00FB74  0E00               	movlw	0
  1354   00FB76  6E6D               	movwf	keypade_initialize@column_index^0,c
  1355   00FB78                     l1583:
  1356                           
  1357                           ;ECU_Layer/Keypad/ecu_keypad.c: 36:         ret = gpio_pin_direction_intialize(&(kepad_o
      +                          bj->keypad_columns[column_index]));
  1358   00FB78  506D               	movf	keypade_initialize@column_index^0,w,c
  1359   00FB7A  2466               	addwf	keypade_initialize@kepad_obj^0,w,c
  1360   00FB7C  6E68               	movwf	??_keypade_initialize^0,c
  1361   00FB7E  0E00               	movlw	0
  1362   00FB80  2067               	addwfc	(keypade_initialize@kepad_obj+1)^0,w,c
  1363   00FB82  6E69               	movwf	(??_keypade_initialize+1)^0,c
  1364   00FB84  0E04               	movlw	4
  1365   00FB86  2468               	addwf	??_keypade_initialize^0,w,c
  1366   00FB88  6E58               	movwf	gpio_pin_direction_intialize@pin_config^0,c
  1367   00FB8A  0E00               	movlw	0
  1368   00FB8C  2069               	addwfc	(??_keypade_initialize+1)^0,w,c
  1369   00FB8E  6E59               	movwf	(gpio_pin_direction_intialize@pin_config+1)^0,c
  1370   00FB90  EC5E  F07F         	call	_gpio_pin_direction_intialize	;wreg free
  1371   00FB94  6E6B               	movwf	keypade_initialize@ret^0,c
  1372   00FB96                     
  1373                           ;ECU_Layer/Keypad/ecu_keypad.c: 37:     }
  1374   00FB96  2A6D               	incf	keypade_initialize@column_index^0,f,c
  1375   00FB98  0E04               	movlw	4
  1376   00FB9A  646D               	cpfsgt	keypade_initialize@column_index^0,c
  1377   00FB9C  EFD2  F07D         	goto	u891
  1378   00FBA0  EFD4  F07D         	goto	u890
  1379   00FBA4                     u891:
  1380   00FBA4  EFBC  F07D         	goto	l1583
  1381   00FBA8                     u890:
  1382   00FBA8                     l1589:
  1383                           
  1384                           ;ECU_Layer/Keypad/ecu_keypad.c: 39: return ret;
  1385   00FBA8  506B               	movf	keypade_initialize@ret^0,w,c
  1386   00FBAA  0012               	return		;funcret
  1387   00FBAC                     __end_of_keypade_initialize:
  1388                           	callstack 0
  1389                           
  1390 ;; *************** function _gpio_pin_intialize *****************
  1391 ;; Defined at:
  1392 ;;		line 126 in file "MCAL_Layer/GPIO/hal_gpio.c"
  1393 ;; Parameters:    Size  Location     Type
  1394 ;;  pin_config      2   10[COMRAM] PTR const struct .
  1395 ;;		 -> keypad1.keypad_rows(4), keypad1(8), Relay_Initialize@pin_obj(1), led_initialize@pin_obj(1), 
  1396 ;; Auto vars:     Size  Location     Type
  1397 ;;  ret             1   13[COMRAM] unsigned char 
  1398 ;; Return value:  Size  Location     Type
  1399 ;;                  1    wreg      unsigned char 
  1400 ;; Registers used:
  1401 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1402 ;; Tracked objects:
  1403 ;;		On entry : 0/0
  1404 ;;		On exit  : 0/0
  1405 ;;		Unchanged: 0/0
  1406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1407 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1408 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1409 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1410 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1411 ;;Total ram usage:        4 bytes
  1412 ;; Hardware stack levels used: 1
  1413 ;; Hardware stack levels required when called: 1
  1414 ;; This function calls:
  1415 ;;		_gpio_pin_direction_intialize
  1416 ;;		_gpio_pin_write_logic
  1417 ;; This function is called by:
  1418 ;;		_led_initialize
  1419 ;;		_keypade_initialize
  1420 ;;		_segment_initialize
  1421 ;;		_DC_Motor_Intialize
  1422 ;;		_Relay_Initialize
  1423 ;; This function uses a non-reentrant model
  1424 ;;
  1425                           
  1426                           	psect	text9
  1427   00F940                     __ptext9:
  1428                           	callstack 0
  1429   00F940                     _gpio_pin_intialize:
  1430                           	callstack 26
  1431   00F940                     
  1432                           ;MCAL_Layer/GPIO/hal_gpio.c: 128:  if(pin_config == ((void*)0) || pin_config->pin > 8 -1
      +                          ){
  1433   00F940  5062               	movf	gpio_pin_intialize@pin_config^0,w,c
  1434   00F942  1063               	iorwf	(gpio_pin_intialize@pin_config+1)^0,w,c
  1435   00F944  B4D8               	btfsc	status,2,c
  1436   00F946  EFA7  F07C         	goto	u831
  1437   00F94A  EFA9  F07C         	goto	u830
  1438   00F94E                     u831:
  1439   00F94E  EFBA  F07C         	goto	l1533
  1440   00F952                     u830:
  1441   00F952  C062  FFD9         	movff	gpio_pin_intialize@pin_config,fsr2l
  1442   00F956  C063  FFDA         	movff	gpio_pin_intialize@pin_config+1,fsr2h
  1443   00F95A  30DF               	rrcf	223,w,c
  1444   00F95C  32E8               	rrcf	wreg,f,c
  1445   00F95E  32E8               	rrcf	wreg,f,c
  1446   00F960  0B07               	andlw	7
  1447   00F962  6E64               	movwf	??_gpio_pin_intialize^0,c
  1448   00F964  0E07               	movlw	7
  1449   00F966  6464               	cpfsgt	??_gpio_pin_intialize^0,c
  1450   00F968  EFB8  F07C         	goto	u841
  1451   00F96C  EFBA  F07C         	goto	u840
  1452   00F970                     u841:
  1453   00F970  EFBE  F07C         	goto	l1535
  1454   00F974                     u840:
  1455   00F974                     l1533:
  1456                           
  1457                           ;MCAL_Layer/GPIO/hal_gpio.c: 129:      ret = (Std_ReturnType)0x00;
  1458   00F974  0E00               	movlw	0
  1459   00F976  6E65               	movwf	gpio_pin_intialize@ret^0,c
  1460                           
  1461                           ;MCAL_Layer/GPIO/hal_gpio.c: 130:  }
  1462   00F978  EFD4  F07C         	goto	l1537
  1463   00F97C                     l1535:
  1464                           
  1465                           ;MCAL_Layer/GPIO/hal_gpio.c: 132:      ret = gpio_pin_direction_intialize(pin_config);
  1466   00F97C  C062  F058         	movff	gpio_pin_intialize@pin_config,gpio_pin_direction_intialize@pin_config
  1467   00F980  C063  F059         	movff	gpio_pin_intialize@pin_config+1,gpio_pin_direction_intialize@pin_config+1
  1468   00F984  EC5E  F07F         	call	_gpio_pin_direction_intialize	;wreg free
  1469   00F988  6E65               	movwf	gpio_pin_intialize@ret^0,c
  1470                           
  1471                           ;MCAL_Layer/GPIO/hal_gpio.c: 133:      ret = gpio_pin_write_logic(pin_config, pin_config
      +                          ->logic);
  1472   00F98A  C062  F058         	movff	gpio_pin_intialize@pin_config,gpio_pin_write_logic@pin_config
  1473   00F98E  C063  F059         	movff	gpio_pin_intialize@pin_config+1,gpio_pin_write_logic@pin_config+1
  1474   00F992  C062  FFD9         	movff	gpio_pin_intialize@pin_config,fsr2l
  1475   00F996  C063  FFDA         	movff	gpio_pin_intialize@pin_config+1,fsr2h
  1476   00F99A  0E00               	movlw	0
  1477   00F99C  BEDF               	btfsc	indf2,7,c
  1478   00F99E  0E01               	movlw	1
  1479   00F9A0  6E5A               	movwf	gpio_pin_write_logic@logic^0,c
  1480   00F9A2  ECC0  F07E         	call	_gpio_pin_write_logic	;wreg free
  1481   00F9A6  6E65               	movwf	gpio_pin_intialize@ret^0,c
  1482   00F9A8                     l1537:
  1483                           
  1484                           ;MCAL_Layer/GPIO/hal_gpio.c: 135:   return ret;
  1485   00F9A8  5065               	movf	gpio_pin_intialize@ret^0,w,c
  1486   00F9AA  0012               	return		;funcret
  1487   00F9AC                     __end_of_gpio_pin_intialize:
  1488                           	callstack 0
  1489                           
  1490 ;; *************** function _gpio_pin_write_logic *****************
  1491 ;; Defined at:
  1492 ;;		line 59 in file "MCAL_Layer/GPIO/hal_gpio.c"
  1493 ;; Parameters:    Size  Location     Type
  1494 ;;  pin_config      2    0[COMRAM] PTR const struct .
  1495 ;;		 -> keypad1.keypad_rows(4), keypad1(8), Relay_Turn_OFF@pin_obj(1), Relay_Turn_ON@pin_obj(1), 
  1496 ;;		 -> Relay_Initialize@pin_obj(1), led_turn_off@pin_obj(1), led_turn_on@pin_obj(1), led_initialize@pin_obj(1), 
  1497 ;;  logic           1    2[COMRAM] enum E2801
  1498 ;; Auto vars:     Size  Location     Type
  1499 ;;  ret             1    9[COMRAM] unsigned char 
  1500 ;; Return value:  Size  Location     Type
  1501 ;;                  1    wreg      unsigned char 
  1502 ;; Registers used:
  1503 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1504 ;; Tracked objects:
  1505 ;;		On entry : 0/0
  1506 ;;		On exit  : 0/0
  1507 ;;		Unchanged: 0/0
  1508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1509 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1510 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1511 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1512 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1513 ;;Total ram usage:       10 bytes
  1514 ;; Hardware stack levels used: 1
  1515 ;; This function calls:
  1516 ;;		Nothing
  1517 ;; This function is called by:
  1518 ;;		_led_turn_on
  1519 ;;		_led_turn_off
  1520 ;;		_gpio_pin_intialize
  1521 ;;		_keypade_get_value
  1522 ;;		_segment_write_data
  1523 ;;		_DC_Motor_Move_Right
  1524 ;;		_DC_Motor_Move_Left
  1525 ;;		_DC_Motor_Stop
  1526 ;;		_Relay_Turn_ON
  1527 ;;		_Relay_Turn_OFF
  1528 ;; This function uses a non-reentrant model
  1529 ;;
  1530                           
  1531                           	psect	text10
  1532   00FD80                     __ptext10:
  1533                           	callstack 0
  1534   00FD80                     _gpio_pin_write_logic:
  1535                           	callstack 29
  1536   00FD80                     
  1537                           ;MCAL_Layer/GPIO/hal_gpio.c: 60:     Std_ReturnType ret = (Std_ReturnType)0x01;
  1538   00FD80  0E01               	movlw	1
  1539   00FD82  6E61               	movwf	gpio_pin_write_logic@ret^0,c
  1540   00FD84                     
  1541                           ;MCAL_Layer/GPIO/hal_gpio.c: 61:       if(pin_config == ((void*)0) || logic == ((void*)0
      +                          ) || pin_config->pin > 8 -1){
  1542   00FD84  5058               	movf	gpio_pin_write_logic@pin_config^0,w,c
  1543   00FD86  1059               	iorwf	(gpio_pin_write_logic@pin_config+1)^0,w,c
  1544   00FD88  B4D8               	btfsc	status,2,c
  1545   00FD8A  EFC9  F07E         	goto	u721
  1546   00FD8E  EFCB  F07E         	goto	u720
  1547   00FD92                     u721:
  1548   00FD92  EFE4  F07E         	goto	l1485
  1549   00FD96                     u720:
  1550   00FD96  505A               	movf	gpio_pin_write_logic@logic^0,w,c
  1551   00FD98  B4D8               	btfsc	status,2,c
  1552   00FD9A  EFD1  F07E         	goto	u731
  1553   00FD9E  EFD3  F07E         	goto	u730
  1554   00FDA2                     u731:
  1555   00FDA2  EFE4  F07E         	goto	l1485
  1556   00FDA6                     u730:
  1557   00FDA6  C058  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  1558   00FDAA  C059  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  1559   00FDAE  30DF               	rrcf	223,w,c
  1560   00FDB0  32E8               	rrcf	wreg,f,c
  1561   00FDB2  32E8               	rrcf	wreg,f,c
  1562   00FDB4  0B07               	andlw	7
  1563   00FDB6  6E5B               	movwf	??_gpio_pin_write_logic^0,c
  1564   00FDB8  0E07               	movlw	7
  1565   00FDBA  645B               	cpfsgt	??_gpio_pin_write_logic^0,c
  1566   00FDBC  EFE2  F07E         	goto	u741
  1567   00FDC0  EFE4  F07E         	goto	u740
  1568   00FDC4                     u741:
  1569   00FDC4  EF47  F07F         	goto	l1493
  1570   00FDC8                     u740:
  1571   00FDC8                     l1485:
  1572                           
  1573                           ;MCAL_Layer/GPIO/hal_gpio.c: 62:      ret = (Std_ReturnType)0x00;
  1574   00FDC8  0E00               	movlw	0
  1575   00FDCA  6E61               	movwf	gpio_pin_write_logic@ret^0,c
  1576                           
  1577                           ;MCAL_Layer/GPIO/hal_gpio.c: 63:  }
  1578   00FDCC  EF5C  F07F         	goto	l1495
  1579   00FDD0                     l1487:
  1580                           
  1581                           ;MCAL_Layer/GPIO/hal_gpio.c: 68:            (*lat_registers[pin_config->port] &= ~(1<<pi
      +                          n_config->pin));
  1582   00FDD0  C058  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  1583   00FDD4  C059  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  1584   00FDD8  30DF               	rrcf	223,w,c
  1585   00FDDA  32E8               	rrcf	wreg,f,c
  1586   00FDDC  32E8               	rrcf	wreg,f,c
  1587   00FDDE  0B07               	andlw	7
  1588   00FDE0  6E5B               	movwf	??_gpio_pin_write_logic^0,c
  1589   00FDE2  0E01               	movlw	1
  1590   00FDE4  6E5C               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1591   00FDE6  2A5B               	incf	??_gpio_pin_write_logic^0,f,c
  1592   00FDE8  EFF8  F07E         	goto	u754
  1593   00FDEC                     u755:
  1594   00FDEC  90D8               	bcf	status,0,c
  1595   00FDEE  365C               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1596   00FDF0                     u754:
  1597   00FDF0  2E5B               	decfsz	??_gpio_pin_write_logic^0,f,c
  1598   00FDF2  EFF6  F07E         	goto	u755
  1599   00FDF6  505C               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1600   00FDF8  0AFF               	xorlw	255
  1601   00FDFA  6E5D               	movwf	(??_gpio_pin_write_logic+2)^0,c
  1602   00FDFC  C058  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  1603   00FE00  C059  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  1604   00FE04  50DF               	movf	223,w,c
  1605   00FE06  0B07               	andlw	7
  1606   00FE08  6E5E               	movwf	(??_gpio_pin_write_logic+3)^0,c
  1607   00FE0A  505E               	movf	(??_gpio_pin_write_logic+3)^0,w,c
  1608   00FE0C  0D02               	mullw	2
  1609   00FE0E  0E3B               	movlw	low _lat_registers
  1610   00FE10  24F3               	addwf	243,w,c
  1611   00FE12  6ED9               	movwf	fsr2l,c
  1612   00FE14  0E00               	movlw	high _lat_registers
  1613   00FE16  20F4               	addwfc	prodh,w,c
  1614   00FE18  6EDA               	movwf	fsr2h,c
  1615   00FE1A  CFDE F05F          	movff	postinc2,??_gpio_pin_write_logic+4
  1616   00FE1E  CFDD F060          	movff	postdec2,??_gpio_pin_write_logic+5
  1617   00FE22  C05F  FFD9         	movff	??_gpio_pin_write_logic+4,fsr2l
  1618   00FE26  C060  FFDA         	movff	??_gpio_pin_write_logic+5,fsr2h
  1619   00FE2A  505D               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  1620   00FE2C  16DF               	andwf	indf2,f,c
  1621                           
  1622                           ;MCAL_Layer/GPIO/hal_gpio.c: 69:            break;
  1623   00FE2E  EF5C  F07F         	goto	l1495
  1624   00FE32                     l1489:
  1625                           
  1626                           ;MCAL_Layer/GPIO/hal_gpio.c: 71:            (*lat_registers[pin_config->port] |= (1<<pin
      +                          _config->pin));
  1627   00FE32  C058  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  1628   00FE36  C059  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  1629   00FE3A  30DF               	rrcf	223,w,c
  1630   00FE3C  32E8               	rrcf	wreg,f,c
  1631   00FE3E  32E8               	rrcf	wreg,f,c
  1632   00FE40  0B07               	andlw	7
  1633   00FE42  6E5B               	movwf	??_gpio_pin_write_logic^0,c
  1634   00FE44  0E01               	movlw	1
  1635   00FE46  6E5C               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1636   00FE48  2A5B               	incf	??_gpio_pin_write_logic^0,f,c
  1637   00FE4A  EF29  F07F         	goto	u764
  1638   00FE4E                     u765:
  1639   00FE4E  90D8               	bcf	status,0,c
  1640   00FE50  365C               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1641   00FE52                     u764:
  1642   00FE52  2E5B               	decfsz	??_gpio_pin_write_logic^0,f,c
  1643   00FE54  EF27  F07F         	goto	u765
  1644   00FE58  C058  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  1645   00FE5C  C059  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  1646   00FE60  50DF               	movf	223,w,c
  1647   00FE62  0B07               	andlw	7
  1648   00FE64  6E5D               	movwf	(??_gpio_pin_write_logic+2)^0,c
  1649   00FE66  505D               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  1650   00FE68  0D02               	mullw	2
  1651   00FE6A  0E3B               	movlw	low _lat_registers
  1652   00FE6C  24F3               	addwf	243,w,c
  1653   00FE6E  6ED9               	movwf	fsr2l,c
  1654   00FE70  0E00               	movlw	high _lat_registers
  1655   00FE72  20F4               	addwfc	prodh,w,c
  1656   00FE74  6EDA               	movwf	fsr2h,c
  1657   00FE76  CFDE F05E          	movff	postinc2,??_gpio_pin_write_logic+3
  1658   00FE7A  CFDD F05F          	movff	postdec2,??_gpio_pin_write_logic+4
  1659   00FE7E  C05E  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  1660   00FE82  C05F  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  1661   00FE86  505C               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1662   00FE88  12DF               	iorwf	indf2,f,c
  1663                           
  1664                           ;MCAL_Layer/GPIO/hal_gpio.c: 72:            break;
  1665   00FE8A  EF5C  F07F         	goto	l1495
  1666   00FE8E                     l1493:
  1667   00FE8E  505A               	movf	gpio_pin_write_logic@logic^0,w,c
  1668   00FE90  6E5B               	movwf	??_gpio_pin_write_logic^0,c
  1669   00FE92  6A5C               	clrf	(??_gpio_pin_write_logic+1)^0,c
  1670                           
  1671                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1672                           ; Switch size 1, requested type "simple"
  1673                           ; Number of cases is 1, Range of values is 0 to 0
  1674                           ; switch strategies available:
  1675                           ; Name         Instructions Cycles
  1676                           ; simple_byte            4     3 (average)
  1677                           ;	Chosen strategy is simple_byte
  1678   00FE94  505C               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1679   00FE96  0A00               	xorlw	0	; case 0
  1680   00FE98  B4D8               	btfsc	status,2,c
  1681   00FE9A  EF51  F07F         	goto	l1869
  1682   00FE9E  EFE4  F07E         	goto	l1485
  1683   00FEA2                     l1869:
  1684                           
  1685                           ; Switch size 1, requested type "simple"
  1686                           ; Number of cases is 2, Range of values is 0 to 1
  1687                           ; switch strategies available:
  1688                           ; Name         Instructions Cycles
  1689                           ; simple_byte            7     4 (average)
  1690                           ;	Chosen strategy is simple_byte
  1691   00FEA2  505B               	movf	??_gpio_pin_write_logic^0,w,c
  1692   00FEA4  0A00               	xorlw	0	; case 0
  1693   00FEA6  B4D8               	btfsc	status,2,c
  1694   00FEA8  EFE8  F07E         	goto	l1487
  1695   00FEAC  0A01               	xorlw	1	; case 1
  1696   00FEAE  B4D8               	btfsc	status,2,c
  1697   00FEB0  EF19  F07F         	goto	l1489
  1698   00FEB4  EFE4  F07E         	goto	l1485
  1699   00FEB8                     l1495:
  1700                           
  1701                           ;MCAL_Layer/GPIO/hal_gpio.c: 77:     return ret;
  1702   00FEB8  5061               	movf	gpio_pin_write_logic@ret^0,w,c
  1703   00FEBA  0012               	return		;funcret
  1704   00FEBC                     __end_of_gpio_pin_write_logic:
  1705                           	callstack 0
  1706                           
  1707 ;; *************** function _gpio_pin_direction_intialize *****************
  1708 ;; Defined at:
  1709 ;;		line 14 in file "MCAL_Layer/GPIO/hal_gpio.c"
  1710 ;; Parameters:    Size  Location     Type
  1711 ;;  pin_config      2    0[COMRAM] PTR const struct .
  1712 ;;		 -> keypad1.keypad_columns(4), keypad1.keypad_rows(4), keypad1(8), Relay_Initialize@pin_obj(1), 
  1713 ;;		 -> led_initialize@pin_obj(1), 
  1714 ;; Auto vars:     Size  Location     Type
  1715 ;;  ret             1    8[COMRAM] unsigned char 
  1716 ;; Return value:  Size  Location     Type
  1717 ;;                  1    wreg      unsigned char 
  1718 ;; Registers used:
  1719 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1720 ;; Tracked objects:
  1721 ;;		On entry : 0/0
  1722 ;;		On exit  : 0/0
  1723 ;;		Unchanged: 0/0
  1724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1725 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1726 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1727 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1728 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1729 ;;Total ram usage:        9 bytes
  1730 ;; Hardware stack levels used: 1
  1731 ;; This function calls:
  1732 ;;		Nothing
  1733 ;; This function is called by:
  1734 ;;		_gpio_pin_intialize
  1735 ;;		_keypade_initialize
  1736 ;;		_Button_Initialize
  1737 ;; This function uses a non-reentrant model
  1738 ;;
  1739                           
  1740                           	psect	text11
  1741   00FEBC                     __ptext11:
  1742                           	callstack 0
  1743   00FEBC                     _gpio_pin_direction_intialize:
  1744                           	callstack 26
  1745   00FEBC                     
  1746                           ;MCAL_Layer/GPIO/hal_gpio.c: 15:  Std_ReturnType ret = (Std_ReturnType)0x01;
  1747   00FEBC  0E01               	movlw	1
  1748   00FEBE  6E60               	movwf	gpio_pin_direction_intialize@ret^0,c
  1749   00FEC0                     
  1750                           ;MCAL_Layer/GPIO/hal_gpio.c: 16:  if(pin_config == ((void*)0) || pin_config->pin > 8 -1)
      +                          {
  1751   00FEC0  5058               	movf	gpio_pin_direction_intialize@pin_config^0,w,c
  1752   00FEC2  1059               	iorwf	(gpio_pin_direction_intialize@pin_config+1)^0,w,c
  1753   00FEC4  B4D8               	btfsc	status,2,c
  1754   00FEC6  EF67  F07F         	goto	u771
  1755   00FECA  EF69  F07F         	goto	u770
  1756   00FECE                     u771:
  1757   00FECE  EF7A  F07F         	goto	l1509
  1758   00FED2                     u770:
  1759   00FED2  C058  FFD9         	movff	gpio_pin_direction_intialize@pin_config,fsr2l
  1760   00FED6  C059  FFDA         	movff	gpio_pin_direction_intialize@pin_config+1,fsr2h
  1761   00FEDA  30DF               	rrcf	223,w,c
  1762   00FEDC  32E8               	rrcf	wreg,f,c
  1763   00FEDE  32E8               	rrcf	wreg,f,c
  1764   00FEE0  0B07               	andlw	7
  1765   00FEE2  6E5A               	movwf	??_gpio_pin_direction_intialize^0,c
  1766   00FEE4  0E07               	movlw	7
  1767   00FEE6  645A               	cpfsgt	??_gpio_pin_direction_intialize^0,c
  1768   00FEE8  EF78  F07F         	goto	u781
  1769   00FEEC  EF7A  F07F         	goto	u780
  1770   00FEF0                     u781:
  1771   00FEF0  EFDD  F07F         	goto	l1517
  1772   00FEF4                     u780:
  1773   00FEF4                     l1509:
  1774                           
  1775                           ;MCAL_Layer/GPIO/hal_gpio.c: 17:      ret = (Std_ReturnType)0x00;
  1776   00FEF4  0E00               	movlw	0
  1777   00FEF6  6E60               	movwf	gpio_pin_direction_intialize@ret^0,c
  1778                           
  1779                           ;MCAL_Layer/GPIO/hal_gpio.c: 18:  }
  1780   00FEF8  EFFE  F07F         	goto	l1519
  1781   00FEFC                     l1511:
  1782                           
  1783                           ;MCAL_Layer/GPIO/hal_gpio.c: 22:            (*tris_registers[pin_config->port] &= ~(1<<p
      +                          in_config->pin));
  1784   00FEFC  C058  FFD9         	movff	gpio_pin_direction_intialize@pin_config,fsr2l
  1785   00FF00  C059  FFDA         	movff	gpio_pin_direction_intialize@pin_config+1,fsr2h
  1786   00FF04  30DF               	rrcf	223,w,c
  1787   00FF06  32E8               	rrcf	wreg,f,c
  1788   00FF08  32E8               	rrcf	wreg,f,c
  1789   00FF0A  0B07               	andlw	7
  1790   00FF0C  6E5A               	movwf	??_gpio_pin_direction_intialize^0,c
  1791   00FF0E  0E01               	movlw	1
  1792   00FF10  6E5B               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  1793   00FF12  2A5A               	incf	??_gpio_pin_direction_intialize^0,f,c
  1794   00FF14  EF8E  F07F         	goto	u794
  1795   00FF18                     u795:
  1796   00FF18  90D8               	bcf	status,0,c
  1797   00FF1A  365B               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  1798   00FF1C                     u794:
  1799   00FF1C  2E5A               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  1800   00FF1E  EF8C  F07F         	goto	u795
  1801   00FF22  505B               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  1802   00FF24  0AFF               	xorlw	255
  1803   00FF26  6E5C               	movwf	(??_gpio_pin_direction_intialize+2)^0,c
  1804   00FF28  C058  FFD9         	movff	gpio_pin_direction_intialize@pin_config,fsr2l
  1805   00FF2C  C059  FFDA         	movff	gpio_pin_direction_intialize@pin_config+1,fsr2h
  1806   00FF30  50DF               	movf	223,w,c
  1807   00FF32  0B07               	andlw	7
  1808   00FF34  6E5D               	movwf	(??_gpio_pin_direction_intialize+3)^0,c
  1809   00FF36  505D               	movf	(??_gpio_pin_direction_intialize+3)^0,w,c
  1810   00FF38  0D02               	mullw	2
  1811   00FF3A  0E45               	movlw	low _tris_registers
  1812   00FF3C  24F3               	addwf	243,w,c
  1813   00FF3E  6ED9               	movwf	fsr2l,c
  1814   00FF40  0E00               	movlw	high _tris_registers
  1815   00FF42  20F4               	addwfc	prodh,w,c
  1816   00FF44  6EDA               	movwf	fsr2h,c
  1817   00FF46  CFDE F05E          	movff	postinc2,??_gpio_pin_direction_intialize+4
  1818   00FF4A  CFDD F05F          	movff	postdec2,??_gpio_pin_direction_intialize+5
  1819   00FF4E  C05E  FFD9         	movff	??_gpio_pin_direction_intialize+4,fsr2l
  1820   00FF52  C05F  FFDA         	movff	??_gpio_pin_direction_intialize+5,fsr2h
  1821   00FF56  505C               	movf	(??_gpio_pin_direction_intialize+2)^0,w,c
  1822   00FF58  16DF               	andwf	indf2,f,c
  1823                           
  1824                           ;MCAL_Layer/GPIO/hal_gpio.c: 23:            break;
  1825   00FF5A  EFFE  F07F         	goto	l1519
  1826   00FF5E                     l1513:
  1827                           
  1828                           ;MCAL_Layer/GPIO/hal_gpio.c: 25:            (*tris_registers[pin_config->port] |= (1<<pi
      +                          n_config->pin));
  1829   00FF5E  C058  FFD9         	movff	gpio_pin_direction_intialize@pin_config,fsr2l
  1830   00FF62  C059  FFDA         	movff	gpio_pin_direction_intialize@pin_config+1,fsr2h
  1831   00FF66  30DF               	rrcf	223,w,c
  1832   00FF68  32E8               	rrcf	wreg,f,c
  1833   00FF6A  32E8               	rrcf	wreg,f,c
  1834   00FF6C  0B07               	andlw	7
  1835   00FF6E  6E5A               	movwf	??_gpio_pin_direction_intialize^0,c
  1836   00FF70  0E01               	movlw	1
  1837   00FF72  6E5B               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  1838   00FF74  2A5A               	incf	??_gpio_pin_direction_intialize^0,f,c
  1839   00FF76  EFBF  F07F         	goto	u804
  1840   00FF7A                     u805:
  1841   00FF7A  90D8               	bcf	status,0,c
  1842   00FF7C  365B               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  1843   00FF7E                     u804:
  1844   00FF7E  2E5A               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  1845   00FF80  EFBD  F07F         	goto	u805
  1846   00FF84  C058  FFD9         	movff	gpio_pin_direction_intialize@pin_config,fsr2l
  1847   00FF88  C059  FFDA         	movff	gpio_pin_direction_intialize@pin_config+1,fsr2h
  1848   00FF8C  50DF               	movf	223,w,c
  1849   00FF8E  0B07               	andlw	7
  1850   00FF90  6E5C               	movwf	(??_gpio_pin_direction_intialize+2)^0,c
  1851   00FF92  505C               	movf	(??_gpio_pin_direction_intialize+2)^0,w,c
  1852   00FF94  0D02               	mullw	2
  1853   00FF96  0E45               	movlw	low _tris_registers
  1854   00FF98  24F3               	addwf	243,w,c
  1855   00FF9A  6ED9               	movwf	fsr2l,c
  1856   00FF9C  0E00               	movlw	high _tris_registers
  1857   00FF9E  20F4               	addwfc	prodh,w,c
  1858   00FFA0  6EDA               	movwf	fsr2h,c
  1859   00FFA2  CFDE F05D          	movff	postinc2,??_gpio_pin_direction_intialize+3
  1860   00FFA6  CFDD F05E          	movff	postdec2,??_gpio_pin_direction_intialize+4
  1861   00FFAA  C05D  FFD9         	movff	??_gpio_pin_direction_intialize+3,fsr2l
  1862   00FFAE  C05E  FFDA         	movff	??_gpio_pin_direction_intialize+4,fsr2h
  1863   00FFB2  505B               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  1864   00FFB4  12DF               	iorwf	indf2,f,c
  1865                           
  1866                           ;MCAL_Layer/GPIO/hal_gpio.c: 26:            break;
  1867   00FFB6  EFFE  F07F         	goto	l1519
  1868   00FFBA                     l1517:
  1869   00FFBA  C058  FFD9         	movff	gpio_pin_direction_intialize@pin_config,fsr2l
  1870   00FFBE  C059  FFDA         	movff	gpio_pin_direction_intialize@pin_config+1,fsr2h
  1871   00FFC2  BCDF               	btfsc	indf2,6,c
  1872   00FFC4  EFE6  F07F         	goto	u811
  1873   00FFC8  EFE9  F07F         	goto	u810
  1874   00FFCC                     u811:
  1875   00FFCC  0E01               	movlw	1
  1876   00FFCE  EFEA  F07F         	goto	u820
  1877   00FFD2                     u810:
  1878   00FFD2  0E00               	movlw	0
  1879   00FFD4                     u820:
  1880   00FFD4  6E5A               	movwf	??_gpio_pin_direction_intialize^0,c
  1881   00FFD6  6A5B               	clrf	(??_gpio_pin_direction_intialize+1)^0,c
  1882                           
  1883                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1884                           ; Switch size 1, requested type "simple"
  1885                           ; Number of cases is 1, Range of values is 0 to 0
  1886                           ; switch strategies available:
  1887                           ; Name         Instructions Cycles
  1888                           ; simple_byte            4     3 (average)
  1889                           ;	Chosen strategy is simple_byte
  1890   00FFD8  505B               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  1891   00FFDA  0A00               	xorlw	0	; case 0
  1892   00FFDC  B4D8               	btfsc	status,2,c
  1893   00FFDE  EFF3  F07F         	goto	l1871
  1894   00FFE2  EF7A  F07F         	goto	l1509
  1895   00FFE6                     l1871:
  1896                           
  1897                           ; Switch size 1, requested type "simple"
  1898                           ; Number of cases is 2, Range of values is 0 to 1
  1899                           ; switch strategies available:
  1900                           ; Name         Instructions Cycles
  1901                           ; simple_byte            7     4 (average)
  1902                           ;	Chosen strategy is simple_byte
  1903   00FFE6  505A               	movf	??_gpio_pin_direction_intialize^0,w,c
  1904   00FFE8  0A00               	xorlw	0	; case 0
  1905   00FFEA  B4D8               	btfsc	status,2,c
  1906   00FFEC  EF7E  F07F         	goto	l1511
  1907   00FFF0  0A01               	xorlw	1	; case 1
  1908   00FFF2  B4D8               	btfsc	status,2,c
  1909   00FFF4  EFAF  F07F         	goto	l1513
  1910   00FFF8  EF7A  F07F         	goto	l1509
  1911   00FFFC                     l1519:
  1912                           
  1913                           ;MCAL_Layer/GPIO/hal_gpio.c: 31:       return ret;
  1914   00FFFC  5060               	movf	gpio_pin_direction_intialize@ret^0,w,c
  1915   00FFFE  0012               	return		;funcret
  1916   010000                     __end_of_gpio_pin_direction_intialize:
  1917                           	callstack 0
  1918   000000                     
  1919                           	psect	rparam
  1920   000000                     
  1921                           	psect	config
  1922                           
  1923                           ; Padding undefined space
  1924   300000                     	org	3145728
  1925   300000  FF                 	db	255
  1926                           
  1927                           ;Config register CONFIG1H @ 0x300001
  1928                           ;	Oscillator Selection bits
  1929                           ;	OSC = HS, HS oscillator
  1930                           ;	Fail-Safe Clock Monitor Enable bit
  1931                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1932                           ;	Internal/External Oscillator Switchover bit
  1933                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1934   300001                     	org	3145729
  1935   300001  02                 	db	2
  1936                           
  1937                           ;Config register CONFIG2L @ 0x300002
  1938                           ;	Power-up Timer Enable bit
  1939                           ;	PWRT = OFF, PWRT disabled
  1940                           ;	Brown-out Reset Enable bits
  1941                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1942                           ;	Brown Out Reset Voltage bits
  1943                           ;	BORV = 3, Minimum setting
  1944   300002                     	org	3145730
  1945   300002  1F                 	db	31
  1946                           
  1947                           ;Config register CONFIG2H @ 0x300003
  1948                           ;	Watchdog Timer Enable bit
  1949                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1950                           ;	Watchdog Timer Postscale Select bits
  1951                           ;	WDTPS = 32768, 1:32768
  1952   300003                     	org	3145731
  1953   300003  1E                 	db	30
  1954                           
  1955                           ; Padding undefined space
  1956   300004                     	org	3145732
  1957   300004  FF                 	db	255
  1958                           
  1959                           ;Config register CONFIG3H @ 0x300005
  1960                           ;	CCP2 MUX bit
  1961                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1962                           ;	PORTB A/D Enable bit
  1963                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1964                           ;	Low-Power Timer1 Oscillator Enable bit
  1965                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1966                           ;	MCLR Pin Enable bit
  1967                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1968   300005                     	org	3145733
  1969   300005  81                 	db	129
  1970                           
  1971                           ;Config register CONFIG4L @ 0x300006
  1972                           ;	Stack Full/Underflow Reset Enable bit
  1973                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1974                           ;	Single-Supply ICSP Enable bit
  1975                           ;	LVP = OFF, Single-Supply ICSP disabled
  1976                           ;	Extended Instruction Set Enable bit
  1977                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1978                           ;	Background Debugger Enable bit
  1979                           ;	DEBUG = 0x1, unprogrammed default
  1980   300006                     	org	3145734
  1981   300006  81                 	db	129
  1982                           
  1983                           ; Padding undefined space
  1984   300007                     	org	3145735
  1985   300007  FF                 	db	255
  1986                           
  1987                           ;Config register CONFIG5L @ 0x300008
  1988                           ;	Code Protection bit
  1989                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1990                           ;	Code Protection bit
  1991                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1992                           ;	Code Protection bit
  1993                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1994                           ;	Code Protection bit
  1995                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1996   300008                     	org	3145736
  1997   300008  0F                 	db	15
  1998                           
  1999                           ;Config register CONFIG5H @ 0x300009
  2000                           ;	Boot Block Code Protection bit
  2001                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2002                           ;	Data EEPROM Code Protection bit
  2003                           ;	CPD = OFF, Data EEPROM not code-protected
  2004   300009                     	org	3145737
  2005   300009  C0                 	db	192
  2006                           
  2007                           ;Config register CONFIG6L @ 0x30000A
  2008                           ;	Write Protection bit
  2009                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  2010                           ;	Write Protection bit
  2011                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  2012                           ;	Write Protection bit
  2013                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  2014                           ;	Write Protection bit
  2015                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  2016   30000A                     	org	3145738
  2017   30000A  0F                 	db	15
  2018                           
  2019                           ;Config register CONFIG6H @ 0x30000B
  2020                           ;	Configuration Register Write Protection bit
  2021                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2022                           ;	Boot Block Write Protection bit
  2023                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  2024                           ;	Data EEPROM Write Protection bit
  2025                           ;	WRTD = OFF, Data EEPROM not write-protected
  2026   30000B                     	org	3145739
  2027   30000B  E0                 	db	224
  2028                           
  2029                           ;Config register CONFIG7L @ 0x30000C
  2030                           ;	Table Read Protection bit
  2031                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  2032                           ;	Table Read Protection bit
  2033                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2034                           ;	Table Read Protection bit
  2035                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  2036                           ;	Table Read Protection bit
  2037                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  2038   30000C                     	org	3145740
  2039   30000C  0F                 	db	15
  2040                           
  2041                           ;Config register CONFIG7H @ 0x30000D
  2042                           ;	Boot Block Table Read Protection bit
  2043                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2044   30000D                     	org	3145741
  2045   30000D  40                 	db	64
  2046                           tosu	equ	0xFFF
  2047                           tosh	equ	0xFFE
  2048                           tosl	equ	0xFFD
  2049                           stkptr	equ	0xFFC
  2050                           pclatu	equ	0xFFB
  2051                           pclath	equ	0xFFA
  2052                           pcl	equ	0xFF9
  2053                           tblptru	equ	0xFF8
  2054                           tblptrh	equ	0xFF7
  2055                           tblptrl	equ	0xFF6
  2056                           tablat	equ	0xFF5
  2057                           prodh	equ	0xFF4
  2058                           prodl	equ	0xFF3
  2059                           indf0	equ	0xFEF
  2060                           postinc0	equ	0xFEE
  2061                           postdec0	equ	0xFED
  2062                           preinc0	equ	0xFEC
  2063                           plusw0	equ	0xFEB
  2064                           fsr0h	equ	0xFEA
  2065                           fsr0l	equ	0xFE9
  2066                           wreg	equ	0xFE8
  2067                           indf1	equ	0xFE7
  2068                           postinc1	equ	0xFE6
  2069                           postdec1	equ	0xFE5
  2070                           preinc1	equ	0xFE4
  2071                           plusw1	equ	0xFE3
  2072                           fsr1h	equ	0xFE2
  2073                           fsr1l	equ	0xFE1
  2074                           bsr	equ	0xFE0
  2075                           indf2	equ	0xFDF
  2076                           postinc2	equ	0xFDE
  2077                           postdec2	equ	0xFDD
  2078                           preinc2	equ	0xFDC
  2079                           plusw2	equ	0xFDB
  2080                           fsr2h	equ	0xFDA
  2081                           fsr2l	equ	0xFD9
  2082                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        87
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     22     117
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    keypade_get_value@value	PTR unsigned char  size(2) Largest target is 1
		 -> keypad_value(COMRAM[1]), 

    keypade_get_value@kepad_obj	PTR const struct . size(2) Largest target is 8
		 -> keypad1(COMRAM[8]), 

    keypade_initialize@kepad_obj	PTR const struct . size(2) Largest target is 8
		 -> keypad1(COMRAM[8]), 

    keypad_btn_values	PTR const unsigned char [4][4] size(3) Largest target is 65535
		 -> ROM(CODE[65535]), 

    gpio_pin_intialize@pin_config	PTR const struct . size(2) Largest target is 8
		 -> keypad1.keypad_rows(COMRAM[4]), keypad1(COMRAM[8]), Relay_Initialize@pin_obj(COMRAM[1]), led_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_read_logic@logic	PTR enum E2801 size(2) Largest target is 1
		 -> keypade_get_value@column_logic(COMRAM[1]), Button_Read_State@Pin_Logic_Status(COMRAM[1]), 

    gpio_pin_read_logic@pin_config	PTR const struct . size(2) Largest target is 8
		 -> keypad1.keypad_columns(COMRAM[4]), keypad1(COMRAM[8]), 

    gpio_pin_write_logic@pin_config	PTR const struct . size(2) Largest target is 8
		 -> keypad1.keypad_rows(COMRAM[4]), keypad1(COMRAM[8]), Relay_Turn_OFF@pin_obj(COMRAM[1]), Relay_Turn_ON@pin_obj(COMRAM[1]), 
		 -> Relay_Initialize@pin_obj(COMRAM[1]), led_turn_off@pin_obj(COMRAM[1]), led_turn_on@pin_obj(COMRAM[1]), led_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_direction_intialize@pin_config	PTR const struct . size(2) Largest target is 8
		 -> keypad1.keypad_columns(COMRAM[4]), keypad1.keypad_rows(COMRAM[4]), keypad1(COMRAM[8]), Relay_Initialize@pin_obj(COMRAM[1]), 
		 -> led_initialize@pin_obj(COMRAM[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), 
		 -> PORTA(BITBIGSFRll[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATB(BITBIGSFRlh[1]), 
		 -> LATA(BITBIGSFRll[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISE(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISB(BITBIGSFRh[1]), 
		 -> TRISA(BITBIGSFRll[1]), 

    led_turn_off@led	PTR const struct . size(2) Largest target is 1
		 -> led1(COMRAM[1]), 

    led_turn_on@led	PTR const struct . size(2) Largest target is 1
		 -> led1(COMRAM[1]), 

    led_initialize@led	PTR const struct . size(2) Largest target is 1
		 -> led1(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _main->_keypade_get_value
    _led_turn_on->_gpio_pin_write_logic
    _led_turn_off->_gpio_pin_write_logic
    _keypade_get_value->_gpio_pin_read_logic
    _keypade_get_value->_gpio_pin_write_logic
    _ECU_Layer_initialize->_keypade_initialize
    _led_initialize->_gpio_pin_intialize
    _keypade_initialize->_gpio_pin_intialize
    _gpio_pin_intialize->_gpio_pin_write_logic

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   18820
             _application_initialize
                  _keypade_get_value
                       _led_turn_off
                        _led_turn_on
 ---------------------------------------------------------------------------------
 (1) _led_turn_on                                          5     3      2    3005
                                             10 COMRAM     5     3      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _led_turn_off                                         5     3      2    3005
                                             10 COMRAM     5     3      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _keypade_get_value                                   13     9      4    3838
                                             10 COMRAM    12     8      4
                _gpio_pin_read_logic
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_read_logic                                 10     6      4     460
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (1) _application_initialize                               0     0      0    8969
               _ECU_Layer_initialize
 ---------------------------------------------------------------------------------
 (2) _ECU_Layer_initialize                                 1     1      0    8969
                 _keypade_initialize
                     _led_initialize
 ---------------------------------------------------------------------------------
 (3) _led_initialize                                       5     3      2    4240
                                             14 COMRAM     5     3      2
                 _gpio_pin_intialize
 ---------------------------------------------------------------------------------
 (3) _keypade_initialize                                   8     6      2    4726
                                             14 COMRAM     8     6      2
       _gpio_pin_direction_intialize
                 _gpio_pin_intialize
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_intialize                                   4     2      2    4012
                                             10 COMRAM     4     2      2
       _gpio_pin_direction_intialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_write_logic                                10     7      3    2785
                                              0 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_direction_intialize                         9     7      2     407
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _application_initialize
     _ECU_Layer_initialize
       _keypade_initialize
         _gpio_pin_direction_intialize
         _gpio_pin_intialize
           _gpio_pin_direction_intialize
           _gpio_pin_write_logic
       _led_initialize
         _gpio_pin_intialize
   _keypade_get_value
     _gpio_pin_read_logic
     _gpio_pin_write_logic
   _led_turn_off
     _gpio_pin_write_logic
   _led_turn_on
     _gpio_pin_write_logic

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     16      75       1       92.1%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      75      39        0.0%
DATA                 0      0      75       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed Nov 01 19:38:18 2023

                                    l51 FA26                                      l61 FA46  
                                    l54 FAC6                                      l47 F9CA  
                                    l65 FAA6                                      l58 FB26  
                                   l300 FD7E                                     l311 F84C  
                                   l209 F9AA                                     l169 FFFE  
                                   l265 F832                                     l257 F938  
                                   l195 FC62                                     l188 FEBA  
                                   l286 FBAA                                     u720 FD96  
                                   u721 FD92                                     u810 FFD2  
                                   u730 FDA6                                     u811 FFCC  
                                   u731 FDA2                                     u820 FFD4  
                                   u804 FF7E                                     u740 FDC8  
                                   u900 FBC2                                     u805 FF7A  
                                   u741 FDC4                                     u901 FBBE  
                                   u830 F952                                     u910 FBD4  
                                   u831 F94E                                     u911 FBD0  
                                   u840 F974                                     u920 FBF6  
                                   u841 F970                                     u921 FBF2  
                                   u770 FED2                                     u754 FDF0  
                                   u850 F9C2                                     u771 FECE  
                                   u755 FDEC                                     u851 F9BE  
                                   u780 FEF4                                     u764 FE52  
                                   u940 FABE                                     u781 FEF0  
                                   u765 FE4E                                     u941 FABA  
                                   u870 FB46                                     u934 FC4C  
                                   u871 FB42                                     u935 FC48  
                                   u880 FB74                                     u960 FA3E  
                                   u881 FB70                                     u865 FA16  
                                   u961 FA3A                                     u794 FF1C  
                                   u890 FBA8                                     u795 FF18  
                                   u891 FBA4                                     u867 FA18  
                                   u955 FB12                                     u980 FC86  
                                   u981 FC82                                     u957 FB14  
                                   u990 FC98                                     u991 FC94  
                                   u975 FA92                                     u977 FA94  
                                   prod 0FF3                     led_initialize@F2881 0074  
                                   wreg 0FE8                            ?_led_turn_on 0062  
                                  l1511 FEFC                                    l1503 FEBC  
                                  l1513 FF5E                                    l1505 FEC0  
                                  l1601 FBF6                                    l1507 FED2  
                                  l1531 F952                                    l1611 F834  
                                  l1603 FBFE                                    l1517 FFBA  
                                  l1509 FEF4                                    l1533 F974  
                                  l1541 F9AC                                    l1613 F840  
                                  l1605 FC60                                    l1701 FD6E  
                                  l1621 FACA                                    l1519 FFFC  
                                  l1535 F97C                                    l1527 F940  
                                  l1551 FA06                                    l1543 F9B0  
                                  l1623 FB00                                    l1615 FAA8  
                                  l1481 FD96                                    l1537 F9A8  
                                  l1529 F940                                    l1561 FB34  
                                  l1553 FA18                                    l1545 F9C2  
                                  l1609 F834                                    l1641 FA80  
                                  l1633 FA28                                    l1625 FB02  
                                  l1617 FAAC                                    l1483 FDA6  
                                  l1571 FB52                                    l1563 FB46  
                                  l1547 F9CE                                    l1555 FA24  
                                  l1651 F82E                                    l1643 FA82  
                                  l1635 FA2C                                    l1627 FB14  
                                  l1619 FABE                                    l1493 FE8E  
                                  l1485 FDC8                                    l1477 FD80  
                                  l1573 FB62                                    l1565 FB4E  
                                  l1549 FA04                                    l1661 FC9C  
                                  l1653 FC64                                    l1645 FA94  
                                  l1637 FA3E                                    l1629 FB24  
                                  l1487 FDD0                                    l1495 FEB8  
                                  l1479 FD84                                    l1583 FB78  
                                  l1575 FB64                                    l1559 FB28  
                                  l1655 FC74                                    l1639 FA4A  
                                  l1647 FAA4                                    l1489 FE32  
                                  l1585 FB96                                    l1577 FB74  
                                  l1593 FBAC                                    l1681 FCDA  
                                  l1673 FCA4                                    l1657 FC86  
                                  l1587 FB98                                    l1595 FBB0  
                                  l1691 FD16                                    l1683 FCEE  
                                  l1675 FCB8                                    l1667 FCA0  
                                  l1659 FC98                                    l1851 F8E0  
                                  l1589 FBA8                                    l1597 FBC2  
                                  l1693 FD26                                    l1677 FCC8  
                                  l1853 F8F4                                    l1871 FFE6  
                                  l1599 FBD4                                    l1695 FD5A  
                                  l1679 FCCA                                    l1855 F906  
                                  l1847 F8DC                                    l1697 FD5C  
                                  l1689 FCF2                                    l1857 F916  
                                  l1849 F8DC                                    l1699 FD6C  
                                  l1859 F928                                    l1869 FEA2  
                                  u1000 FCDA                                    u1001 FCD6  
                                  u1010 FD26                                    u1011 FD22  
                                  u1020 FD6C                                    u1021 FD68  
                                  u1030 FD7E                                    u1031 FD7A  
                                  u1240 F906                                    u1241 F902  
                                  u1250 F928                                    u1251 F924  
                                  _LATA 0F89                                    _LATB 0F8A  
                                  _LATC 0F8B                                    _LATD 0F8C  
                                  _LATE 0F8D                                    u1267 FCBE  
                                  _led1 0057                                    _main F8DC  
                                  fsr1h 0FE2                                    fsr2h 0FDA  
                                  indf1 0FE7                                    indf2 0FDF  
                                  fsr1l 0FE1                                    fsr2l 0FD9  
                __end_of_led_initialize FA28                                    prodh 0FF4  
                                  prodl 0FF3                                    start 0000  
                         ?_led_turn_off 0062                            ___param_bank 0000  
                  _gpio_pin_write_logic FD80                                   ?_main 0058  
              ??_application_initialize 006E           keypade_initialize@row_counter 006A  
                 keypade_initialize@ret 006B                                   _PORTA 0F80  
                                 _PORTB 0F81                                   _PORTC 0F82  
                                 _PORTD 0F83                                   _PORTE 0F84  
                                 _TRISA 0F92                                   _TRISB 0F93  
                                 _TRISC 0F94                                   _TRISD 0F95  
                                 _TRISE 0F96                    _ECU_Layer_initialize F834  
                                 tablat 0FF5                                   status 0FD8  
                       ?_led_initialize 0066                          ??_led_turn_off 0064  
                       __initialization F84E                            __end_of_main F940  
         gpio_pin_read_logic@pin_config 0058                   ?_gpio_pin_write_logic 0058  
              gpio_pin_read_logic@logic 005A                           _lat_registers 003B  
                                ??_main 006E                           __activetblptr 0002  
                      led_turn_on@F2886 0073                   ?_ECU_Layer_initialize 0058  
                   Relay_Turn_OFF@F2885 006E                                  clear_0 F874  
                 led_initialize@pin_obj 006A                                  isa$std 0001  
                          __pdataCOMRAM 0001                                  tblptrh 0FF7  
                                tblptrl 0FF6                                  tblptru 0FF8  
                            __accesstop 0080                 __end_of__initialization F87A  
                         ___rparam_used 0001                       led_initialize@led 0066  
                     led_initialize@ret 0069              __end_of_keypade_initialize FBAC  
                ??_gpio_pin_write_logic 005B                          __pcstackCOMRAM 0058  
        keypade_initialize@column_index 006D           keypade_get_value@column_logic 006A  
        keypade_get_value@l_row_counter 006B                    __end_of_led_turn_off FAA8  
                ??_ECU_Layer_initialize 006E                  _application_initialize F82E  
                 Relay_Initialize@F2875 0070                       led_turn_off@F2891 0072  
                       led_toggle@F2896 0071                        ??_led_initialize 0068  
                        _tris_registers 0045                                 __Hparam 0000  
                               __Lparam 0000                     _gpio_pin_read_logic FBAC  
            __end_of_gpio_pin_intialize F9AC                                 __pcinit F84E  
                               __ramtop 1000             keypade_initialize@kepad_obj 0066  
                               __ptext0 F8DC                                 __ptext1 FAA8  
                               __ptext2 FA28                                 __ptext3 FC64  
                               __ptext4 FBAC                                 __ptext5 F82E  
                               __ptext6 F834                                 __ptext7 F9AC  
                               __ptext8 FB28                                 __ptext9 F940  
                               _keypad1 004F                    ?_gpio_pin_read_logic 0058  
                  end_of_initialization F87A                           __Lmediumconst 0000  
                 gpio_pin_intialize@ret 0065                     led_turn_off@pin_obj 0066  
                               postdec1 0FE5                                 postdec2 0FDD  
                               postinc0 0FEE                                 postinc2 0FDE  
           keypade_initialize@row_index 006C    __end_of_gpio_pin_direction_intialize 0000  
          _gpio_pin_direction_intialize FEBC                   ??_gpio_pin_read_logic 005C  
            keypade_get_value@kepad_obj 0062                            _led_turn_off FA28  
                         __pidataCOMRAM F885                      _keypade_initialize FB28  
                   start_initialization F84E                           ??_led_turn_on 0064  
         ?_gpio_pin_direction_intialize 0058                 ?_application_initialize 0058  
                   ?_keypade_initialize 0066                         led_turn_off@led 0062  
                       led_turn_off@ret 0065                      Relay_Turn_ON@F2880 006F  
                  ??_keypade_initialize 0068                             __pbssCOMRAM 006E  
        __end_of_application_initialize F834                     __end_of_led_turn_on FB28  
        gpio_pin_write_logic@pin_config 0058         gpio_pin_direction_intialize@ret 0060  
                keypade_get_value@value 0064            keypade_get_value@l_row_index 006C  
       keypade_get_value@l_column_index 006D               gpio_pin_write_logic@logic 005A  
                          _keypad_value 0075                      _gpio_pin_intialize F940  
        ??_gpio_pin_direction_intialize 005A                     ?_gpio_pin_intialize 0062  
                    led_turn_on@pin_obj 0066                       _keypad_btn_values 0001  
                  ??_gpio_pin_intialize 0064                       _keypade_get_value FC64  
                    ?_keypade_get_value 0062                             _led_turn_on FAA8  
               gpio_pin_write_logic@ret 0061                               copy_data0 F862  
                   ??_keypade_get_value 0066                  gpio_pin_read_logic@ret 0061  
                        led_turn_on@led 0062                          led_turn_on@ret 0065  
                              __Hrparam 0000                                __Lrparam 0000  
             __end_of_keypade_get_value FD80             __end_of_gpio_pin_read_logic FC64  
                              __ptext10 FD80                                __ptext11 FEBC  
          gpio_pin_intialize@pin_config 0062                                isa$xinst 0000  
          __end_of_gpio_pin_write_logic FEBC  gpio_pin_direction_intialize@pin_config 0058  
          __end_of_ECU_Layer_initialize F84E                          _port_registers 0031  
                        _led_initialize F9AC  
